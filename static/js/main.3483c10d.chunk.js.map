{"version":3,"sources":["services/stock.js","constants/trello.js","services/trelloApi.js","Trello.js","services/trello.js","context/StockContext.js","routers/routes.js","routers/CommonRoute.js","components/NavBar/Navbar.styles.js","components/NavBar/NavBar.js","hooks/useDebounce.js","constants/chart.js","constants/locale.js","components/StockChart/StockChart.js","constants/calendar.js","utils/day.js","components/StockCalendar/StockCalendar.styles.js","components/StockCalendar/StockCalendar.js","utils/chart.js","utils/utils.js","pages/Stock/Stock.styles.js","pages/Stock/Stock.js","pages/StockList/StockList.styles.js","pages/StockList/StockList.js","pages/Dashboard/Dashboard.styles.js","pages/Dashboard/Dashboard.js","pages/Tag/Tag.styles.js","pages/Tag/Tag.js","utils/tag.js","App.styles.js","App.js","serviceWorker.js","index.js"],"names":["fetchStockDataFromCsv","stockNumber","a","fetch","window","location","origin","response","returnValue","text","data","split","slice","forEach","row","columns","push","process","TRELLO_BOARD_STUDY_ID","REACT_APP_TRELLO_BOARD_STUDY_ID","TRELLO_LIST_ID","REACT_APP_TRELLO_LIST_ID","TRELLO_API_KEY","REACT_APP_TRELLO_CARD_ID","REACT_APP_TRELLO_API_KEY","MyTrello","key","token","this","opts","name","replace","expiration","scope","read","write","account","Promise","resolve","reject","protocol","host","pathname","search","popup","open","Object","keys","filter","k","join","screenX","innerWidth","screenY","innerHeight","timeout","setTimeout","close","Error","popupTick","setInterval","closed","clearInterval","addEventListener","e","clearTimeout","localStorage","setItem","method","path","qs","URLSearchParams","append","init","url","body","toString","headers","then","r","json","req","authTrello","callback","getItem","existingToken","auth","catch","getTrello","params","get","postTrello","post","getLabelsOnBoard","listId","getCardsOnBoard","field","createCard","stock","idList","labels","code","nation","createdAt","updatedAt","tags","basePrice","length","idLabels","tag","label","find","_label","trim","id","desc","created_at","base_price","newCard","JSON","stringify","pos","due","Date","toISOString","Context","createContext","Provider","STOCK_DATA_LIST","Consumer","StockProvider","children","useState","stockList","setStockList","tagList","setTagList","hasTrelloToken","setTrelloToken","useEffect","_labels","reduce","acc","cur","_cards","_stockList","map","card","parse","user_id","updated_at","tag_list","getStockData","stockCode","value","state","actions","StockContext","description","CommonRoute","rest","Container","styled","div","flexColumnCenterX","StockList","StockItem","Link","StockText","Chip","active","css","mobileOnly","font","size","color","gold200","PageTitle","textExtraLarge","gray400","SearchInput","BaseInput","NavBar","useLocation","Routes","root","stockListPage","currentStock","setCurrentStock","searchResults","setSearchResults","searchKeyword","setSearchKeyword","debounceSearchKeyword","delay","debouncedValue","setDebouncedValue","handler","useDebounce","useContext","_stock","el","result","includes","getRelatedStockList","useCallback","_tag","concat","to","type","placeholder","maxLength","onChange","target","chartOption","xAxis","yAxis","series","chartStyle","height","width","LOCALE","US","KO","CURRENCY","defaultOption","legend","tooltip","trigger","axisPointer","animation","axisLabel","formatter","StockChart","chartData","onEvents","style","isLoaded","setLoaded","option","setOption","EchartsReact","setEchartsReact","_option","instance","getEchartsInstance","clear","ref","OffsetList","getTodayDate","dayjs","format","isWeekend","date","day","getAdjustDateToWeekDay","index","getDayOfWeek","subtract","flexCenterY","CalendarContainer","flexCenter","DateInput","MaskingInput","OffsetContainer","RadioButton","NewBaseButton","isChecked","yellow100","gray100","OffsetDate","Radio","Cursor","StockCalendar","startDate","setStartDate","endDate","setEndDate","calendarOffset","setCalendarOffset","handleChange","newDate","today","handleDateByOffset","dir","_endDate","_startDate","offsetValue","add","isAfter","isBefore","onClick","mask","required","outline","offset","handleCalendarOffset","getPercent","number","parseInt","Math","round","getCurrency","getIndexOfDayBetween","startDateIndex","findIndex","endDateIndex","getTargetDateValue","targetDate","_valueDate","getMinMaxValue","values","minValue","min","maxValue","max","Stock","useRouteMatch","history","useHistory","optionPercent","setOptionPercent","percentTargetDate","setPercentTargetDate","basePriceValue","setBasePriceValue","stockData","stockDataPercent","stockAll","targetDateValue","_basePriceValue","parseFloat","connectNulls","lineStyle","markLine","slient","symbol","position","distance","getData","click","flexContainer","List","Input","StockInput","Dropdown","BasePopover","DropdownList","PopoverItem","DropdownText","AddButton","stockDefaultValue","userId","cards","setCards","setLabels","setStock","prevState","res","disabled","placement","content","_nation","readOnly","Dashboard","optionHigh","setOptionHigh","optionExtraHigh","setOptionExtraHigh","optionLow","setOptionLow","optionUs","setOptionUs","stockDataHigh","stockDataExtraHigh","stockDataLow","stockDataUs","fetchAllData","all","currency","priceList","mean","Tag","tagName","tagStockList","setTagStockList","_tagStockList","getStockListByTag","AppBody","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.3483c10d.chunk.js","sourcesContent":["export const fetchStockListFromCsv = async () => {\n  const response = await fetch(\n    `${window.location.origin}/stock/data/stock_list.csv`\n  );\n  const returnValue = [];\n  const data = await response.text();\n  const table = data.split(/\\n/);\n  table.forEach((row) => {\n    const columns = row.split(',');\n    returnValue.push(columns);\n  });\n  return returnValue;\n};\n\nexport const fetchStockDataFromCsv = async (stockNumber) => {\n  const response = await fetch(\n    `${window.location.origin}/stock/data/${stockNumber}.csv`\n  );\n  const returnValue = [];\n  const data = await response.text();\n  const table = data.split(/\\n/).slice(1);\n  table.forEach((row) => {\n    const columns = row.split(',');\n    returnValue.push(columns);\n  });\n  return returnValue;\n};\n","export const {\n  REACT_APP_TRELLO_BOARD_STUDY_ID: TRELLO_BOARD_STUDY_ID,\n  REACT_APP_TRELLO_LIST_ID: TRELLO_LIST_ID,\n  REACT_APP_TRELLO_CARD_ID: TRELLO_CARD_ID,\n  REACT_APP_TRELLO_API_KEY: TRELLO_API_KEY,\n} = process.env;\n\nexport const TRELLO_COLLECTION_TYPE = {\n  CARDS: 'cards',\n  CHECKLISTS: 'checklists',\n  BOARDS: 'boards',\n  LISTS: 'lists',\n  MEMBERS: 'members',\n  ORGANIZATIONS: 'organizations',\n  ACTIONS: 'actions',\n};\n\nexport const TRELLO_LABEL_COLOR = [\n  'yellow',\n  'purple',\n  'blue',\n  'red',\n  'green',\n  'orange',\n  'black',\n  'sky',\n  'pink',\n  'lime',\n];\n","import { TRELLO_API_KEY } from 'constants/trello';\nimport Trello from 'Trello';\n\nconst MyTrello = new Trello(TRELLO_API_KEY);\n\nexport const authTrello = (callback) => {\n  return Promise.resolve()\n    .then(() => localStorage.getItem('trello_token'))\n    .then((existingToken) => {\n      if (existingToken) {\n        MyTrello.token = existingToken;\n        MyTrello.key = TRELLO_API_KEY;\n      } else {\n        return MyTrello.auth({\n          name: 'Stock App',\n          scope: {\n            read: true,\n            write: true,\n            account: true,\n          },\n          expiration: 'never',\n        });\n      }\n    })\n    .then(() => {\n      return callback();\n    })\n    .catch(() => {\n      // console.log(\n      //   'something bad happened, or the user took too long to authorize.',\n      //   e\n      // );\n    });\n};\n\nexport const getTrello = (path, params = {}) => {\n  return MyTrello.get(`/1/${path}`, params);\n};\n\nexport const postTrello = (path, params = {}) => {\n  return MyTrello.post(`/1/${path}`, params);\n};\n\nexport const putTrello = (path, params = {}) => {\n  return MyTrello.put(`/1/${path}`, params);\n};\n\nexport const deleteTrello = (path, params = {}) => {\n  return MyTrello.delete(`/1/${path}`, params);\n};\n\nexport const getColletionTrello = (type, id, params = {}) => {\n  return MyTrello.get(`/1/${type}/${id}`, params);\n};\n","/* global fetch */\n\nclass Trello {\n  constructor(key, token) {\n    this.key = key;\n    this.token = token;\n  }\n\n  auth(opts) {\n    const name = (opts.name || 'My App').replace(/ /g, '+');\n    const expiration = opts.expiration || '1hour';\n    const scope = opts.scope || { read: true, write: true, account: false };\n\n    return new Promise((resolve, reject) => {\n      const { protocol, host, pathname, search } = window.location;\n      const popup = window.open(\n        `https://trello.com/1/authorize?response_type=token&key=${\n          this.key\n        }&return_url=${protocol}//${host}${pathname}${search}&callback_method=postMessage&scope=${Object.keys(\n          scope\n        )\n          .filter((k) => scope[k])\n          .join(',')}&expiration=${expiration}&name=${name}`,\n        'trello',\n        `height=606,width=405,left=${\n          window.screenX + (window.innerWidth - 420) / 2\n        },right=${window.screenY + (window.innerHeight - 470) / 2}`\n      );\n\n      const timeout = setTimeout(() => {\n        popup.close();\n        reject(new Error('Trello pop-up closed.'));\n      }, 60000);\n\n      const popupTick = setInterval(() => {\n        if (popup.closed) {\n          clearInterval(popupTick);\n          reject(new Error('Trello pop-up closed.'));\n        }\n      }, 500);\n\n      window.addEventListener('message', (e) => {\n        if (typeof e.data === 'string') {\n          clearTimeout(timeout);\n          popup.close();\n          this.token = e.data;\n          localStorage.setItem('trello_token', e.data);\n          resolve();\n        }\n      });\n    });\n  }\n\n  req(method, path, data) {\n    data = data || {};\n    data.key = this.key;\n    data.token = this.token;\n    const qs = new URLSearchParams();\n    for (const k in data) {\n      qs.append(k, data[k]);\n    }\n\n    const init = {\n      method,\n    };\n\n    let url = `https://api.trello.com${path}`;\n\n    if (method === 'POST' || method === 'PUT') {\n      init.body = qs.toString();\n      init.headers = {\n        'Content-type': 'application/x-www-form-urlencoded',\n      };\n    } else {\n      url += `?${qs.toString()}`;\n    }\n\n    return fetch(url, init).then((r) => r.json());\n  }\n\n  get(path, data) {\n    return this.req('GET', path, data);\n  }\n\n  head(path, data) {\n    return this.req('HEAD', path, data);\n  }\n\n  post(path, data) {\n    return this.req('POST', path, data);\n  }\n\n  put(path, data) {\n    return this.req('PUT', path, data);\n  }\n}\n\nexport default Trello;\n","import { getRandomInt } from 'utils/utils';\nimport { getTrello, getColletionTrello, postTrello } from 'services/trelloApi';\nimport {\n  TRELLO_COLLECTION_TYPE,\n  TRELLO_LABEL_COLOR,\n  // TRELLO_BOARD_STUDY_ID,\n} from 'constants/trello';\n\nexport const getMe = () => {\n  return getTrello('members/me');\n};\n\nexport const getMyBoards = () => {\n  return getTrello('members/me/boards');\n};\n\n/** \n################ Get from board\n* */\nexport const getListsOnBoard = (listId, field = 'all') => {\n  return getTrello(`boards/${listId}/lists/${field}`);\n};\n\nexport const getLabelsOnBoard = (listId) => {\n  return getTrello(`boards/${listId}/labels`);\n};\n\nexport const getCardsOnBoard = (listId, field = 'all') => {\n  return getTrello(`boards/${listId}/cards/${field}`);\n};\n\nexport const getCardOnBoardById = (listId, cardId) => {\n  return getTrello(`boards/${listId}/cards/${cardId}`);\n};\n\n/** \n################ Get collections by id\n* */\nexport const getCardById = (cardId) => {\n  return getColletionTrello(TRELLO_COLLECTION_TYPE.CARDS, cardId);\n};\n\nexport const getListById = (listId) => {\n  return getColletionTrello(TRELLO_COLLECTION_TYPE.LISTS, listId);\n};\n\nexport const createLabel = async (tagName, idBoard) => {\n  const index = getRandomInt(0, TRELLO_LABEL_COLOR.length);\n  const newLabel = {\n    name: tagName,\n    color: TRELLO_LABEL_COLOR[index],\n    idBoard,\n  };\n  const res = await postTrello('labels', newLabel);\n  return res;\n};\n\nexport const createCard = async (stock, idList, labels) => {\n  if (!stock) return;\n\n  const code = stock[0];\n  const name = stock[1];\n  const nation = stock[2];\n  const createdAt = stock[4];\n  const updatedAt = stock[5];\n  const tags = stock[6].split('/');\n  const basePrice = stock.length === 8 ? stock[7] : '';\n\n  const idLabels = [];\n  await tags.forEach(async (tag) => {\n    const label = labels.find((_label) => _label.name.trim() === tag.trim());\n    if (label) {\n      idLabels.push(label.id);\n    }\n  });\n\n  const desc = {\n    code,\n    name,\n    nation,\n    created_at: createdAt,\n    base_price: basePrice,\n  };\n\n  const newCard = {\n    idList,\n    name,\n    desc: JSON.stringify(desc),\n    pos: 'top',\n    due: updatedAt ? new Date(updatedAt).toISOString() : '',\n    idLabels: idLabels.toString(),\n  };\n  await postTrello('cards', newCard);\n};\n","import React, { useState, createContext, useEffect } from 'react';\n\nimport { fetchStockDataFromCsv } from 'services/stock';\nimport { TRELLO_BOARD_STUDY_ID } from 'constants/trello';\nimport { getLabelsOnBoard, getCardsOnBoard } from 'services/trello';\nimport { authTrello } from 'services/trelloApi';\n\nconst Context = createContext();\n\nconst { Provider, Consumer: StockConsumer } = Context;\nlet STOCK_DATA_LIST = {};\n\nconst StockProvider = ({ children }) => {\n  const [stockList, setStockList] = useState([]);\n  const [tagList, setTagList] = useState([]);\n  const [hasTrelloToken, setTrelloToken] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      await authTrello().then(() => {\n        setTrelloToken(true);\n      });\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      if (hasTrelloToken) {\n        const _labels = await getLabelsOnBoard(TRELLO_BOARD_STUDY_ID);\n        const tags = _labels.reduce((acc, cur) => {\n          return [...acc, cur.name];\n        }, []);\n        setTagList([...tags]);\n\n        const _cards = await getCardsOnBoard(TRELLO_BOARD_STUDY_ID);\n        const _stockList = _cards.map((card) => {\n          const desc = JSON.parse(card.desc);\n          const array = [\n            desc.code,\n            card.name,\n            desc.nation,\n            '1',\n            desc.created_at,\n            card.due ? card.due.split('T')[0] : '',\n            card.labels.map((label) => label.name).join('/'),\n          ];\n          return array;\n        });\n        setStockList(_stockList);\n        STOCK_DATA_LIST = _stockList.reduce(\n          (acc, cur) => ({\n            ...acc,\n            [cur[0]]: {\n              code: cur[0],\n              name: cur[1],\n              nation: cur[2],\n              user_id: cur[3],\n              created_at: cur[4],\n              updated_at: cur[5],\n              tag_list: cur[6],\n              data: [],\n            },\n          }),\n          {}\n        );\n      }\n    })();\n  }, [hasTrelloToken]);\n\n  const getStockData = async (stockCode) => {\n    if (!stockCode) return [];\n\n    if (\n      STOCK_DATA_LIST[stockCode]?.data &&\n      STOCK_DATA_LIST[stockCode]?.data.length > 0\n    ) {\n      return STOCK_DATA_LIST[stockCode].data;\n    }\n    const data = await fetchStockDataFromCsv(stockCode);\n\n    STOCK_DATA_LIST = {\n      ...STOCK_DATA_LIST,\n      [stockCode]: {\n        ...STOCK_DATA_LIST[stockCode],\n        data,\n      },\n    };\n    return data;\n  };\n\n  return (\n    <Provider\n      value={{\n        state: {\n          stockList,\n          tagList,\n          hasTrelloToken,\n          STOCK_DATA_LIST,\n        },\n        actions: { getStockData },\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\nconst StockContext = Context;\n\nexport { StockProvider, StockConsumer, StockContext };\n","const root = {\n  path: '/stock/dashboard',\n  url: '/stock/dashboard',\n  description: 'Dashboard Page',\n};\n\nconst stock = {\n  path: '/stock/code/:code',\n  url: '/stock/code/',\n  description: 'Stock Page',\n};\n\nconst stockListPage = {\n  path: '/stock/list',\n  url: '/stock/list/',\n  description: 'Stock List Page',\n};\n\nconst tag = {\n  path: '/stock/tag/:tag',\n  url: '/stock/tag/',\n  description: 'Tag Page',\n};\n\nexport default {\n  root,\n  stock,\n  stockListPage,\n  tag,\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst CommonRoute = ({ children, path, ...rest }) => {\n  return (\n    <Route path={path} {...rest}>\n      {children}\n    </Route>\n  );\n};\n\nexport default CommonRoute;\n","import styled, { css } from 'styled-components';\nimport {\n  Chip,\n  flexColumnCenterX,\n  textExtraLarge,\n  gray400,\n  BaseInput,\n  font,\n  gold200,\n  mobileOnly,\n} from 'remember-ui';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  ${flexColumnCenterX}\n  padding:20px;\n`;\n\nexport const StockList = styled.div`\n  width: 100%;\n`;\nexport const StockItem = styled(Link)`\n  display: inline-block;\n  margin: 5px;\n  cursor: pointer;\n  text-decoration: none;\n`;\n\nexport const StockText = styled(Chip)`\n  ${({ active }) =>\n    active &&\n    css`\n      font-weight: bold;\n    `}\n  &:hover,\n  &:focus {\n    font-weight: bold;\n  }\n\n  ${mobileOnly(css`\n    ${font({ size: '12px', color: gold200 })}\n    padding: 5px;\n    min-width: 40px;\n  `)}\n`;\n\nexport const PageTitle = styled.div`\n  ${textExtraLarge({ color: gray400 })}\n`;\n\nexport const SearchInput = styled(BaseInput)`\n  width: 220px;\n`;\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport useDebounce from 'hooks/useDebounce';\nimport Routes from 'routers/routes';\nimport { StockContext } from 'context/StockContext';\n\nimport {\n  Container,\n  StockList,\n  StockItem,\n  StockText,\n  PageTitle,\n  SearchInput,\n} from './Navbar.styles';\n\nconst NavBar = () => {\n  const { pathname } = useLocation();\n  const { stock, tag, root, stockListPage } = Routes;\n  const [currentStock, setCurrentStock] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const debounceSearchKeyword = useDebounce(searchKeyword, 500);\n\n  const {\n    state: { stockList, tagList },\n  } = useContext(StockContext);\n\n  useEffect(() => {\n    const stockCode = pathname.replace(stock.url, '');\n    const _stock = stockList.find((el) => el[0] === stockCode);\n    setCurrentStock(_stock);\n  }, [pathname, stock.url, stockList]);\n\n  useEffect(() => {\n    (async function searchStockList() {\n      if (debounceSearchKeyword) {\n        const result = stockList.filter(\n          (el) =>\n            el[0].includes(debounceSearchKeyword) ||\n            el[1].includes(debounceSearchKeyword) ||\n            el[6].includes(debounceSearchKeyword)\n        );\n        setSearchResults([...result]);\n      } else {\n        setSearchResults([]);\n      }\n    })();\n  }, [debounceSearchKeyword, stockList]);\n\n  const getRelatedStockList = useCallback(\n    (_tag) => [\n      ...stockList.reduce(\n        (acc, cur) => (cur[6].includes(_tag) ? acc.concat([cur]) : acc),\n        []\n      ),\n    ],\n    [stockList]\n  );\n\n  const handleChange = ({ target: { value } }) => {\n    setSearchKeyword(value.trim());\n  };\n\n  return (\n    <Container>\n      <StockList>\n        <StockItem to={`${root.path}`}>\n          <StockText active={pathname === `${root.path}`}>\n            {`${root.description}`}\n          </StockText>\n        </StockItem>\n        <StockItem to={`${stockListPage.path}`}>\n          <StockText active={pathname === `${stockListPage.path}`}>\n            {`${stockListPage.description}`}\n          </StockText>\n        </StockItem>\n        {tagList &&\n          tagList.map((el) => (\n            <StockItem key={el} to={`${tag.url}${el}`}>\n              <StockText active={pathname === `${tag.url}${el}`}>\n                {`${el}`}\n              </StockText>\n            </StockItem>\n          ))}\n      </StockList>\n\n      {pathname.includes(tag.url) && (\n        <StockList>\n          <PageTitle>\n            {pathname.replace(tag.url, '')} 태그 관련 종목\n            <br />\n            {getRelatedStockList(pathname.replace(tag.url, '')).map((el) => (\n              <StockItem key={el} to={`${stock.url}${el[0]}`}>\n                <StockText active={pathname === `${stock.url}${el[0]}`}>\n                  {`${el[1]} (${el[0]})`}\n                </StockText>\n              </StockItem>\n            ))}\n          </PageTitle>\n        </StockList>\n      )}\n\n      {currentStock && (\n        <StockList>\n          <PageTitle>\n            {`${currentStock[1]} (${currentStock[0]})`} 종목 관련 태그\n            <br />\n            {currentStock[6].split('/').map((el) => (\n              <StockItem key={el} to={`${tag.url}${el}`}>\n                <StockText active={pathname === `${tag.url}${el}`}>\n                  {`${el}`}\n                </StockText>\n              </StockItem>\n            ))}\n          </PageTitle>\n        </StockList>\n      )}\n      <StockList>\n        <SearchInput\n          type=\"text\"\n          name=\"searchKeyword\"\n          placeholder=\"종목, 코드, 태그를 검색\"\n          maxLength={20}\n          value={searchKeyword}\n          onChange={handleChange}\n        />\n        {searchResults &&\n          searchResults.map((el) => (\n            <StockItem key={el[0]} to={`${stock.url}${el[0]}`}>\n              <StockText active={pathname === `${stock.url}${el[0]}`}>\n                {`${el[1]} (${el[0]})`}\n              </StockText>\n            </StockItem>\n          ))}\n      </StockList>\n    </Container>\n  );\n};\n\nexport default NavBar;\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      // value 값이 바뀌면 이전 setTimeout을 clear 해줌\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","export const chartOption = { xAxis: {}, yAxis: {}, series: [] };\nexport const chartStyle = { height: '700px', width: '100%' };\n","export const LOCALE = {\n  US: 'us',\n  KO: 'ko',\n};\n\nexport const CURRENCY = {\n  US: '$',\n  KO: '원',\n};\n","import React, { useEffect, useState } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nimport { chartStyle } from 'constants/chart';\nimport { CURRENCY } from 'constants/locale';\n\nconst defaultOption = {\n  legend: {\n    // data: stockList.map((el) => `${el[1]}/${el[0]}`),\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'cross',\n      animation: false,\n    },\n    // formatter: function (params) {\n    //   console.log(params);\n    //   return `날짜 : ${params[0].name} <br> 가격 : ${params[0].value} <br> 종목 :  ${params[0].seriesName}`;\n    // },\n  },\n  xAxis: {\n    type: 'category',\n    data: [],\n  },\n  yAxis: {\n    type: 'value',\n    axisLabel: {\n      formatter: `{value} ${CURRENCY.KO}`,\n    },\n    // min: 0,\n    // max: 0,\n    // interval: 0,\n  },\n  series: [],\n};\n\nconst StockChart = ({\n  chartData,\n  onEvents,\n  stockList,\n  style = { ...chartStyle },\n}) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [option, setOption] = useState({ ...defaultOption });\n  const [EchartsReact, setEchartsReact] = useState(null);\n\n  useEffect(() => {\n    const _option = {\n      legend: {\n        ...defaultOption.legend,\n        data: stockList.map((el) => `${el[1]}/${el[0]}`),\n      },\n      tooltip: {\n        ...defaultOption.tooltip,\n      },\n      xAxis: {\n        ...defaultOption.xAxis,\n        ...chartData.xAxis,\n      },\n      yAxis: {\n        ...defaultOption.yAxis,\n        ...chartData.yAxis,\n      },\n      series: [...defaultOption.series, ...chartData.series],\n    };\n    setOption(_option);\n\n    const instance = EchartsReact?.getEchartsInstance();\n    if (instance) {\n      instance.clear();\n      instance.setOption(_option);\n    }\n\n    setLoaded(true);\n  }, [EchartsReact, chartData, stockList]);\n\n  return (\n    <>\n      {isLoaded && (\n        <ReactEcharts\n          ref={(e) => {\n            setEchartsReact(e);\n          }}\n          style={style}\n          option={option}\n          onEvents={onEvents}\n        />\n      )}\n    </>\n  );\n};\n\nexport default StockChart;\n","export const CalendarFormat = 'YYYY-MM-DD';\nexport const defaultOffset = '1 year';\nexport const OffsetList = [\n  { name: '1 month', value: 1 },\n  { name: '3 month', value: 3 },\n  { name: '6 month', value: 6 },\n  { name: '1 year', value: 12 },\n  { name: '3 year', value: 36 },\n  { name: '5 year', value: 60 },\n];\nexport const chartStartDate = '2015-01-02';\n","import dayjs from 'dayjs';\n\nimport { CalendarFormat } from 'constants/calendar';\n\nexport const getTodayDate = () => dayjs().format(CalendarFormat);\n\nexport const isWeekend = (date) =>\n  dayjs(date).day() === 0 || dayjs(date).day() === 6;\n\nexport const getDayOfWeek = (date) => dayjs(date).day();\n\nexport const getAdjustDateToWeekDay = (date) => {\n  const day = getDayOfWeek(date);\n  const index = day === 0 ? 2 : 1;\n  return dayjs(date).subtract(index, 'day').format(CalendarFormat);\n};\n","import styled, { css } from 'styled-components';\nimport {\n  flexCenter,\n  Radio,\n  MaskingInput,\n  flexCenterY,\n  NewBaseButton,\n  font,\n  text,\n  gray100,\n  yellow100,\n  mobileOnly,\n} from 'remember-ui';\n\nexport const Container = styled.div`\n  ${flexCenterY}\n\n  width:100%;\n  justify-content: space-between;\n\n  ${mobileOnly(css`\n    flex-direction: column;\n    justify-content: center;\n  `)}\n`;\n\nexport const CalendarContainer = styled.div`\n  ${flexCenter}\n`;\n\nexport const DateInput = styled(MaskingInput)`\n  padding: 0px 10px;\n`;\n\nexport const OffsetContainer = styled.div`\n  ${flexCenter}\n  padding:20px;\n\n  ${mobileOnly(css`\n    padding: 20px 0px;\n  `)}\n`;\n\nexport const RadioButton = styled(NewBaseButton)`\n  ${font({ size: '15px', color: text })}\n\n  ${({ isChecked }) =>\n    isChecked &&\n    css`\n      background-color: ${yellow100};\n    `}\n\n  border-radius:0px;\n  border: 1px solid ${gray100};\n\n  ${mobileOnly(css`\n    display: none;\n    ${font({ size: '12px', color: text })}\n    padding:0px;\n  `)}\n`;\n\nexport const OffsetDate = styled(Radio)``;\n\nexport const Cursor = styled.div`\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\nimport dayjs from 'dayjs';\n\nimport {\n  defaultOffset,\n  OffsetList,\n  chartStartDate,\n  CalendarFormat,\n} from 'constants/calendar';\nimport { isWeekend, getAdjustDateToWeekDay, getTodayDate } from 'utils/day';\n\nimport {\n  CalendarContainer,\n  DateInput,\n  Container,\n  OffsetContainer,\n  OffsetDate,\n  Cursor,\n  RadioButton,\n} from './StockCalendar.styles';\n\nconst StockCalendar = ({ startDate, setStartDate, endDate, setEndDate }) => {\n  const [calendarOffset, setCalendarOffset] = useState(defaultOffset);\n\n  const handleChange = (e) => {\n    const target = e.target.name;\n    const date = e.target.value;\n    if (date.length === 10) {\n      const newDate = new Date(date);\n      const today = new Date();\n      const _chartStartDate = new Date(chartStartDate);\n      if (+newDate >= +_chartStartDate && +newDate <= +today) {\n        target === 'startDate' ? setStartDate(date) : setEndDate(date);\n      }\n    }\n  };\n\n  const handleCalendarOffset = (offset, offsetValue) => {\n    let date = dayjs(endDate, CalendarFormat);\n    date = date.subtract(offsetValue, 'month');\n    setCalendarOffset(offset);\n    if (isWeekend(date)) {\n      date = getAdjustDateToWeekDay(date);\n    }\n    setStartDate(dayjs(date).format(CalendarFormat));\n  };\n\n  const handleDateByOffset = (dir) => {\n    let _endDate = dayjs(endDate, CalendarFormat);\n    let _startDate = dayjs(startDate, CalendarFormat);\n    const offsetValue = OffsetList.find((el) => el.name === calendarOffset)\n      .value;\n    if (dir === 'next') {\n      _endDate = _endDate.add(offsetValue, 'month');\n      _startDate = _startDate.add(offsetValue, 'month');\n      if (dayjs(_endDate).isAfter(getTodayDate())) {\n        // alert('오늘 이후의 날짜는 선택할 수 없습니다.');\n        return;\n      }\n    } else if (dir === 'prev') {\n      _endDate = _endDate.subtract(offsetValue, 'month');\n      _startDate = _startDate.subtract(offsetValue, 'month');\n\n      if (dayjs(_startDate).isBefore(chartStartDate)) {\n        // alert(`${chartStartDate} 이전의 날짜는 선택할 수 없습니다.`);\n        return;\n      }\n    }\n\n    if (isWeekend(_endDate)) {\n      _endDate = getAdjustDateToWeekDay(_endDate);\n    }\n    if (isWeekend(_startDate)) {\n      _startDate = getAdjustDateToWeekDay(_startDate);\n    }\n    setEndDate(dayjs(_endDate).format(CalendarFormat));\n    setStartDate(dayjs(_startDate).format(CalendarFormat));\n  };\n\n  return (\n    <Container>\n      <CalendarContainer>\n        <Cursor onClick={() => handleDateByOffset('prev')}>{'<'}</Cursor>\n        <DateInput\n          mask={[\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            '-',\n            /[0-9]/,\n            /[0-9]/,\n            '-',\n            /[0-9]/,\n            /[0-9]/,\n          ]}\n          type=\"text\"\n          name=\"startDate\"\n          value={startDate}\n          required\n          onChange={handleChange}\n          placeholder=\"8자리 숫자 입력(2015-01-02)\"\n        />\n        ~\n        <DateInput\n          mask={[\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            '-',\n            /[0-9]/,\n            /[0-9]/,\n            '-',\n            /[0-9]/,\n            /[0-9]/,\n          ]}\n          type=\"text\"\n          name=\"endDate\"\n          value={endDate}\n          required\n          onChange={handleChange}\n          placeholder=\"8자리 숫자 입력(2015-01-02)\"\n        />\n        <Cursor onClick={() => handleDateByOffset('next')}>{'>'}</Cursor>\n      </CalendarContainer>\n      <OffsetContainer>\n        {OffsetList &&\n          OffsetList.map((el) => (\n            <RadioButton\n              isChecked={calendarOffset === el.name}\n              size=\"medium\"\n              outline\n              key={el.value}\n            >\n              <OffsetDate\n                isChecked={calendarOffset === el.name}\n                onClick={() => handleCalendarOffset(el.name, el.value)}\n              />\n              <span>{el.name}</span>\n            </RadioButton>\n          ))}\n      </OffsetContainer>\n    </Container>\n  );\n};\n\nexport default StockCalendar;\n","import dayjs from 'dayjs';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\n\nimport { CalendarFormat } from 'constants/calendar';\nimport { LOCALE, CURRENCY } from 'constants/locale';\nimport { getRoundTwoPrecision } from 'utils/utils';\n\nexport const getPercent = (target, value) => {\n  return getRoundTwoPrecision(\n    ((parseInt(value, 10) - parseInt(target, 10)) / parseInt(target, 10)) * 100\n  );\n};\n\nexport const generateDayBetween = (startDate, endDate) => {\n  let _start = dayjs(startDate).format(CalendarFormat);\n  const _end = dayjs(endDate).format(CalendarFormat);\n  const days = [];\n\n  dayjs.extend(isSameOrBefore);\n  while (dayjs(_start).isSameOrBefore(_end)) {\n    days.push([_start, '0', '0', '0', '0', '0', '0']);\n    _start = dayjs(_start).add(1, 'day').format(CalendarFormat);\n  }\n\n  return days;\n};\n\nexport const getCurrency = (stock) => {\n  const nation = (stock && stock[2]) || '';\n  if (nation === LOCALE.KO) {\n    return CURRENCY.KO;\n  }\n  if (nation === LOCALE.US) {\n    return CURRENCY.US;\n  }\n  return '';\n};\n\nexport const getIndexOfDayBetween = (stock, startDate, endDate) => {\n  let startDateIndex = stock.findIndex(\n    (el) => el[0] === dayjs(startDate).format(CalendarFormat)\n  );\n  startDateIndex = startDateIndex <= 0 ? 0 : startDateIndex;\n\n  let endDateIndex = stock.findIndex(\n    (el) => el[0] === dayjs(endDate).format(CalendarFormat)\n  );\n  endDateIndex = endDateIndex <= 0 ? stock.length - 1 : endDateIndex;\n  return { startDateIndex, endDateIndex };\n};\n\nexport const getTargetDateValue = (stock, targetDate) => {\n  let value = null;\n  if (stock.find((el) => el[0] === targetDate)) {\n    value = parseInt(stock.find((el) => el[0] === targetDate)[4], 10);\n  }\n  if (!value || value === 0) {\n    const _valueDate = stock.find((el) => el[4] !== '0');\n    value = _valueDate ? _valueDate[4] : null;\n  }\n  return value;\n};\n\nexport const getMinMaxValue = (stock) => {\n  const values = stock\n    .map((el) => {\n      if (el[4] !== '0') return parseInt(el[4], 10);\n      return null;\n    })\n    .filter((el) => el);\n\n  const minValue = parseInt(Math.min(...values), 10);\n  const maxValue = parseInt(Math.max(...values), 10);\n  return { minValue, maxValue };\n};\n","export const getRoundTwoPrecision = (number) => Math.round(number * 100) / 100;\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n","import styled from 'styled-components';\nimport { flexColumnCenterX } from 'remember-ui';\n\nexport const Container = styled.div`\n  ${flexColumnCenterX}\n  padding:20px;\n`;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport Routes from 'routers/routes';\nimport { chartOption } from 'constants/chart';\nimport { LOCALE } from 'constants/locale';\nimport StockChart from 'components/StockChart/StockChart';\nimport StockCalendar from 'components/StockCalendar/StockCalendar';\nimport { getTodayDate } from 'utils/day';\nimport {\n  getCurrency,\n  getPercent,\n  getIndexOfDayBetween,\n  getTargetDateValue,\n  getMinMaxValue,\n} from 'utils/chart';\nimport { StockContext } from 'context/StockContext';\n\nimport { Container } from './Stock.styles';\n\nconst Stock = () => {\n  const {\n    params: { code: stockCode },\n  } = useRouteMatch();\n  const {\n    state: { stockList },\n    actions: { getStockData },\n  } = useContext(StockContext);\n\n  const history = useHistory();\n  const { stockListPage } = Routes;\n\n  const [isLoaded, setLoaded] = useState(false);\n  const [option, setOption] = useState({\n    ...chartOption,\n  });\n  const [optionPercent, setOptionPercent] = useState({\n    ...chartOption,\n  });\n\n  const [startDate, setStartDate] = useState('2020-01-02');\n  const [endDate, setEndDate] = useState(getTodayDate());\n  const [percentTargetDate, setPercentTargetDate] = useState(startDate);\n  const [basePriceValue, setBasePriceValue] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoaded(false);\n      const currentStock = stockList.find((el) => el[0] === stockCode);\n      if (stockList.length > 0 && !currentStock)\n        history.replace(stockListPage.path);\n\n      const stockData = { ...chartOption };\n      const stockDataPercent = { ...chartOption };\n\n      const stockAll = await getStockData(stockCode);\n      const { startDateIndex, endDateIndex } = getIndexOfDayBetween(\n        stockAll,\n        startDate,\n        endDate\n      );\n\n      const stock = stockAll.slice(startDateIndex, endDateIndex + 1);\n\n      const targetDateValue = getTargetDateValue(stock, percentTargetDate);\n\n      const _basePriceValue =\n        currentStock &&\n        currentStock.length > 0 &&\n        parseInt(currentStock[7], 10);\n\n      setBasePriceValue(_basePriceValue);\n\n      const { minValue, maxValue } = getMinMaxValue(stock);\n\n      // x축\n      stockData.xAxis = {\n        ...stockData.xAxis,\n        data: stock.map((el) => el[0]),\n      };\n      stockDataPercent.xAxis = {\n        ...stockData.xAxis,\n      };\n\n      // y축\n      stockData.yAxis = {\n        ...stockData.yAxis,\n        min: minValue,\n        max: maxValue,\n        axisLabel: {\n          formatter: `{value} ${getCurrency(currentStock)}`,\n        },\n      };\n      stockDataPercent.yAxis = {\n        ...stockDataPercent.yAxis,\n        axisLabel: {\n          formatter: '{value} %',\n        },\n      };\n\n      // series Data\n      stockData.series = [\n        ...stockData.series,\n        {\n          data: stock.map((el) => {\n            if (el[4] !== '0') {\n              if (currentStock && currentStock[2] === LOCALE.KO) {\n                return parseInt(el[4], 10);\n              }\n              if (currentStock && currentStock[2] === LOCALE.US) {\n                return parseFloat(el[4]);\n              }\n              return parseInt(el[4], 10);\n            }\n            return null;\n          }),\n          type: 'line',\n          connectNulls: true,\n          name: `${currentStock ? currentStock[1] : ''}/${stockCode}`,\n          lineStyle: {\n            color: '#ff457e',\n          },\n          markLine: {\n            slient: true,\n            symbol: ['none', 'none'],\n            lineStyle: {\n              color: '#f58c23',\n              width: 2,\n              type: 'solid',\n            },\n            data: [\n              {\n                name: 'Base Price',\n                yAxis: basePriceValue || 0,\n                label: {\n                  formatter: '{c}',\n                  position: 'end',\n                  distance: 10,\n                },\n              },\n            ],\n          },\n        },\n      ];\n\n      stockDataPercent.series = [\n        ...stockDataPercent.series,\n        {\n          data: stock.map((el) => {\n            if (el[4] !== '0')\n              return getPercent(targetDateValue, parseInt(el[4], 10));\n            return null;\n          }),\n          type: 'line',\n          connectNulls: true,\n          name: `${currentStock ? currentStock[1] : ''}/${stockCode}`,\n          lineStyle: {\n            color: '#ff457e',\n            width: 3,\n          },\n        },\n        {\n          data: stock.map((el) => {\n            if (el[4] !== '0')\n              return getPercent(_basePriceValue, parseInt(el[4], 10));\n            return null;\n          }),\n          type: 'line',\n          connectNulls: true,\n          name: `${currentStock ? currentStock[1] : ''}/${stockCode}`,\n          lineStyle: {\n            color: 'rgba(87,159,251,.5)',\n          },\n        },\n      ];\n\n      setOption(stockData);\n      setOptionPercent(stockDataPercent);\n      setLoaded(true);\n    };\n\n    getData();\n  }, [\n    basePriceValue,\n    endDate,\n    getStockData,\n    history,\n    percentTargetDate,\n    startDate,\n    stockCode,\n    stockList,\n    stockListPage.path,\n  ]);\n\n  const onChartClick = (params) => {\n    const { name } = params;\n    setPercentTargetDate(name);\n  };\n\n  return (\n    <Container>\n      <StockCalendar\n        startDate={startDate}\n        setStartDate={setStartDate}\n        endDate={endDate}\n        setEndDate={setEndDate}\n      />\n      {isLoaded && (\n        <>\n          종가 그래프( Y축 : 기간 내 최저가 ~ 최고가)\n          <StockChart\n            stockList={stockList}\n            chartData={option}\n            style={{ height: '300px', width: '100%' }}\n          />\n        </>\n      )}\n      {isLoaded && (\n        <>\n          {percentTargetDate}일( 기준일 = 0% ) 대비 상승/하락 률 ( 그래프 클릭\n          날짜 변경 )\n          <br />\n          {basePriceValue > 0 && (\n            <>기준 가격(0%): {basePriceValue} 원 대비 상승/하락 률</>\n          )}\n          <StockChart\n            stockList={stockList}\n            chartData={optionPercent}\n            onEvents={{\n              click: onChartClick,\n            }}\n            style={{ height: '300px', width: '100%' }}\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Stock;\n","import styled from 'styled-components';\nimport {\n  font,\n  gray100,\n  text,\n  Chip,\n  BaseInput,\n  flexContainer,\n  BasePopover,\n  PopoverItem,\n  NewBaseButton,\n} from 'remember-ui';\n\nexport const Container = styled.div`\n  ${flexContainer('flex-start', false, 'column')};\n\n  padding: 20px;\n`;\n\nexport const List = styled.div`\n  width: 100%;\n`;\n\nexport const StockItem = styled.div`\n  ${flexContainer('flex-start', 'center', 'row')};\n  margin: 5px;\n`;\n\nexport const StockText = styled(Chip)``;\n\nexport const Input = styled.div`\n  ${flexContainer('flex-start', 'center', 'row')};\n\n  width: 100%;\n`;\n\nexport const StockInput = styled(BaseInput)`\n  width: 120px;\n`;\n\nexport const Dropdown = styled(BasePopover)`\n  height: 500px;\n  max-height: 500px;\n  overflow-y: scroll;\n`;\n\nexport const DropdownList = styled(PopoverItem)``;\n\nexport const DropdownText = styled.div`\n  width: 120px;\n  font-size: 15px;\n  color: ${text};\n  height: 44px;\n  border-radius: 4px;\n  border: 1px solid ${gray100};\n  padding: 11px 12px;\n  box-sizing: border-box;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const AddButton = styled(NewBaseButton)`\n  ${font({ size: '15px', color: text })};\n\n  width: 200px;\n`;\n","import React, { useState, useEffect, useContext } from 'react';\nimport dayjs from 'dayjs';\n\nimport { StockContext } from 'context/StockContext';\nimport {\n  // TRELLO_CARD_ID,\n  TRELLO_LIST_ID,\n  TRELLO_BOARD_STUDY_ID,\n} from 'constants/trello';\nimport { CalendarFormat } from 'constants/calendar';\nimport { LOCALE } from 'constants/locale';\nimport {\n  // getMe,\n  // getMyBoards,\n  // getListsOnBoard,\n  getLabelsOnBoard,\n  getCardsOnBoard,\n  // getCardOnBoardById,\n  // getCardById,\n  // getListById,\n  // createLabel,\n  createCard,\n} from 'services/trello';\n\nimport {\n  AddButton,\n  Container,\n  List,\n  StockItem,\n  StockText,\n  Input,\n  StockInput,\n  Dropdown,\n  DropdownList,\n  DropdownText,\n} from './StockList.styles';\n\nconst stockDefaultValue = {\n  name: '',\n  code: '',\n  nation: LOCALE.KO,\n  userId: '1',\n  createdAt: dayjs(new Date()).format(CalendarFormat),\n  tags: '',\n  basePrice: '',\n};\n\nconst StockList = () => {\n  const {\n    state: { tagList, hasTrelloToken },\n  } = useContext(StockContext);\n\n  const [cards, setCards] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [stock, setStock] = useState({ ...stockDefaultValue });\n\n  useEffect(() => {\n    (async () => {\n      if (hasTrelloToken) {\n        const _cards = await getCardsOnBoard(TRELLO_BOARD_STUDY_ID);\n        setCards(_cards);\n        const _labels = await getLabelsOnBoard(TRELLO_BOARD_STUDY_ID);\n        setLabels(_labels);\n      }\n    })();\n  }, [hasTrelloToken]);\n\n  const addCardToTrello = () => {\n    const { code, name, nation, userId, createdAt, tags, basePrice } = stock;\n    const _stock = [code, name, nation, userId, createdAt, '', tags, basePrice];\n    createCard(_stock, TRELLO_LIST_ID, labels).then((res) => {\n      if (res) setStock({ ...stockDefaultValue });\n    });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setStock((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const { name, code, nation, createdAt, basePrice } = stock;\n\n  return (\n    <Container>\n      <AddButton onClick={addCardToTrello} disabled={!name || !code}>\n        AddCARD\n      </AddButton>\n      <Input>\n        <StockInput\n          type=\"text\"\n          name=\"code\"\n          placeholder=\"종목코드\"\n          maxLength={20}\n          value={code}\n          onChange={handleChange}\n        />\n        <StockInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"종목이름\"\n          maxLength={20}\n          value={name}\n          onChange={handleChange}\n        />\n        <Dropdown\n          size=\"medium\"\n          placement=\"bottom-start\"\n          content={\n            <div>\n              {Object.keys(LOCALE).map((_nation) => (\n                <DropdownList\n                  key={_nation}\n                  onClick={() => {\n                    setStock((prevState) => ({\n                      ...prevState,\n                      nation: LOCALE[_nation],\n                    }));\n                  }}\n                >\n                  {LOCALE[_nation]}\n                </DropdownList>\n              ))}\n            </div>\n          }\n        >\n          <DropdownText> {nation || LOCALE.KO}</DropdownText>\n        </Dropdown>\n\n        <StockInput\n          type=\"text\"\n          name=\"createdAt\"\n          placeholder=\"추가날짜\"\n          maxLength={20}\n          value={createdAt}\n          onChange={handleChange}\n          readOnly\n        />\n        <StockInput\n          type=\"text\"\n          name=\"basePrice\"\n          placeholder=\"basePrice\"\n          maxLength={20}\n          value={basePrice}\n          onChange={handleChange}\n        />\n        <Dropdown\n          size=\"medium\"\n          placement=\"bottom-start\"\n          content={\n            <div>\n              {tagList.map((tag) => (\n                <DropdownList\n                  key={tag}\n                  onClick={() => {\n                    setStock((prevState) => ({\n                      ...prevState,\n                      tags: prevState.tags\n                        ? `${prevState.tags}/${tag}`\n                        : `${tag}`,\n                    }));\n                  }}\n                >\n                  {tag}\n                </DropdownList>\n              ))}\n            </div>\n          }\n        >\n          <DropdownText>태그 추가</DropdownText>\n        </Dropdown>\n        {stock.tags &&\n          stock.tags\n            .split('/')\n            .map((tag) => <StockText key={tag}>{tag}</StockText>)}\n      </Input>\n      <List>\n        {cards?.map((card) => (\n          <StockItem key={card.id}>\n            {Object.keys(JSON.parse(card.desc)).map((key) => {\n              return (\n                <StockInput\n                  key={key}\n                  type=\"text\"\n                  name={key}\n                  placeholder={key}\n                  maxLength={20}\n                  value={JSON.parse(card.desc)[key]}\n                  onChange={handleChange}\n                  disabled\n                />\n              );\n            })}\n            {card.labels.map((label) => (\n              <StockText key={label.id}>{label.name}</StockText>\n            ))}\n          </StockItem>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default StockList;\n","import styled from 'styled-components';\nimport { flexColumnCenterX } from 'remember-ui';\n\nexport const Container = styled.div`\n  ${flexColumnCenterX}\n  padding:20px;\n`;\n","import React, { useEffect, useState, useContext } from 'react';\n\nimport { chartOption } from 'constants/chart';\nimport { LOCALE } from 'constants/locale';\nimport StockChart from 'components/StockChart/StockChart';\nimport StockCalendar from 'components/StockCalendar/StockCalendar';\nimport { getTodayDate } from 'utils/day';\nimport { getCurrency, getIndexOfDayBetween } from 'utils/chart';\nimport { StockContext } from 'context/StockContext';\n\nimport { Container } from './Dashboard.styles';\n\nconst Dashboard = () => {\n  const {\n    state: { stockList },\n    actions: { getStockData },\n  } = useContext(StockContext);\n\n  const [isLoaded, setLoaded] = useState(false);\n  const [option, setOption] = useState({\n    ...chartOption,\n  });\n  const [optionHigh, setOptionHigh] = useState({\n    ...chartOption,\n  });\n  const [optionExtraHigh, setOptionExtraHigh] = useState({\n    ...chartOption,\n  });\n  const [optionLow, setOptionLow] = useState({\n    ...chartOption,\n  });\n  const [optionUs, setOptionUs] = useState({\n    ...chartOption,\n  });\n  const [startDate, setStartDate] = useState('2020-01-02');\n  const [endDate, setEndDate] = useState(getTodayDate());\n\n  useEffect(() => {\n    const stockData = { ...chartOption };\n    const stockDataHigh = { ...chartOption };\n    const stockDataExtraHigh = { ...chartOption };\n    const stockDataLow = { ...chartOption };\n    const stockDataUs = { ...chartOption };\n    const fetchAllData = [];\n\n    stockList\n      .map((el) => el[0])\n      .forEach(async (number) => {\n        fetchAllData.push(getStockData(number));\n      });\n\n    Promise.all(fetchAllData).then((data) => {\n      data.forEach((stockAll, index) => {\n        const currentStock = stockList[index];\n        const currency = (currentStock && currentStock[2]) || LOCALE.KO;\n        const { startDateIndex, endDateIndex } = getIndexOfDayBetween(\n          stockAll,\n          startDate,\n          endDate\n        );\n\n        const stock = stockAll.slice(startDateIndex, endDateIndex + 1);\n\n        const priceList = stock\n          .slice(1)\n          .map((el) => {\n            if (el[4] !== '0') return parseInt(el[4], 10);\n            return null;\n          })\n          .filter((el) => el);\n\n        const mean = (Math.min(...priceList) + Math.max(...priceList)) / 2;\n        const ref =\n          // eslint-disable-next-line no-nested-ternary\n          currency === LOCALE.US\n            ? stockDataUs\n            : // eslint-disable-next-line no-nested-ternary\n            mean > 400000\n            ? stockDataExtraHigh\n            : // eslint-disable-next-line no-nested-ternary\n            mean > 200000\n            ? stockDataHigh\n            : mean < 50000\n            ? stockDataLow\n            : stockData;\n\n        ref.xAxis = {\n          ...ref.xAxis,\n          data: stock.map((el) => el[0]),\n        };\n\n        ref.yAxis = {\n          ...ref.yAxis,\n          axisLabel: {\n            formatter: `{value} ${getCurrency(currentStock)}`,\n          },\n        };\n\n        ref.series = [\n          ...ref.series,\n          {\n            data: stock.map((el) => {\n              if (el[4] !== '0') {\n                if (currentStock && currentStock[2] === LOCALE.KO) {\n                  return parseInt(el[4], 10);\n                }\n                if (currentStock && currentStock[2] === LOCALE.US) {\n                  return parseFloat(el[4]);\n                }\n                return parseInt(el[4], 10);\n              }\n              return null;\n            }),\n            type: 'line',\n            connectNulls: true,\n            name: `${currentStock[1]}/${currentStock[0]}`,\n          },\n        ];\n      });\n      setOption(stockData);\n      setOptionHigh(stockDataHigh);\n      setOptionExtraHigh(stockDataExtraHigh);\n      setOptionLow(stockDataLow);\n      setOptionUs(stockDataUs);\n      setLoaded(true);\n    });\n  }, [startDate, endDate, stockList, getStockData]);\n\n  return (\n    <Container>\n      <StockCalendar\n        startDate={startDate}\n        setStartDate={setStartDate}\n        endDate={endDate}\n        setEndDate={setEndDate}\n      />\n      {isLoaded && (\n        <StockChart stockList={stockList} chartData={optionExtraHigh} />\n      )}\n      {isLoaded && <StockChart stockList={stockList} chartData={optionHigh} />}\n      {isLoaded && <StockChart stockList={stockList} chartData={option} />}\n      {isLoaded && <StockChart stockList={stockList} chartData={optionLow} />}\n      {isLoaded && <StockChart stockList={stockList} chartData={optionUs} />}\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { flexColumnCenterX } from 'remember-ui';\n\nexport const Container = styled.div`\n  ${flexColumnCenterX}\n  padding:20px;\n`;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport Routes from 'routers/routes';\nimport { chartOption } from 'constants/chart';\nimport { LOCALE } from 'constants/locale';\nimport StockChart from 'components/StockChart/StockChart';\nimport StockCalendar from 'components/StockCalendar/StockCalendar';\nimport { getTodayDate } from 'utils/day';\nimport {\n  getCurrency,\n  getPercent,\n  getIndexOfDayBetween,\n  getTargetDateValue,\n} from 'utils/chart';\nimport { getStockListByTag } from 'utils/tag';\nimport { StockContext } from 'context/StockContext';\n\nimport { Container } from './Tag.styles';\n\nconst Tag = () => {\n  const {\n    params: { tag: tagName },\n  } = useRouteMatch();\n  const {\n    state: { stockList },\n    actions: { getStockData },\n  } = useContext(StockContext);\n\n  const history = useHistory();\n  const { stockListPage } = Routes;\n\n  const [tagStockList, setTagStockList] = useState([]);\n  const [isLoaded, setLoaded] = useState(false);\n  const [option, setOption] = useState({\n    ...chartOption,\n  });\n  const [optionUs, setOptionUs] = useState({\n    ...chartOption,\n  });\n  const [optionPercent, setOptionPercent] = useState({\n    ...chartOption,\n  });\n\n  const [startDate, setStartDate] = useState('2020-01-02');\n  const [endDate, setEndDate] = useState(getTodayDate());\n  const [percentTargetDate, setPercentTargetDate] = useState(startDate);\n\n  useEffect(() => {\n    const _tagStockList = getStockListByTag(stockList, tagName);\n    if (stockList.length > 0 && _tagStockList.length === 0)\n      history.replace(stockListPage.path);\n\n    setTagStockList(_tagStockList);\n    const stockData = { ...chartOption };\n    const stockDataUs = { ...chartOption };\n    const stockDataPercent = { ...chartOption };\n    const fetchAllData = [];\n\n    _tagStockList\n      .map((el) => el[0])\n      .forEach(async (number) => {\n        fetchAllData.push(getStockData(number));\n      });\n\n    Promise.all(fetchAllData).then((data) => {\n      data.forEach((stockAll, index) => {\n        const currentStock = _tagStockList[index];\n\n        const currency = (currentStock && currentStock[2]) || LOCALE.KO;\n\n        const { startDateIndex, endDateIndex } = getIndexOfDayBetween(\n          stockAll,\n          startDate,\n          endDate\n        );\n\n        const stock = stockAll.slice(startDateIndex, endDateIndex + 1);\n\n        const targetDateValue = getTargetDateValue(stock, percentTargetDate);\n\n        const ref = currency === LOCALE.US ? stockDataUs : stockData;\n\n        ref.xAxis = {\n          ...ref.xAxis,\n          data: stock.map((el) => el[0]),\n        };\n        stockDataPercent.xAxis = {\n          ...ref.xAxis,\n        };\n\n        ref.yAxis = {\n          ...ref.yAxis,\n          axisLabel: {\n            formatter: `{value} ${getCurrency(currentStock)}`,\n          },\n        };\n        stockDataPercent.yAxis = {\n          ...stockDataPercent.yAxis,\n          axisLabel: {\n            formatter: '{value} %',\n          },\n        };\n\n        ref.series = [\n          ...ref.series,\n          {\n            data: stock.map((el) => {\n              if (el[4] !== '0') {\n                if (currentStock && currentStock[2] === LOCALE.KO) {\n                  return parseInt(el[4], 10);\n                }\n                if (currentStock && currentStock[2] === LOCALE.US) {\n                  return parseFloat(el[4]);\n                }\n                return parseInt(el[4], 10);\n              }\n              return null;\n            }),\n            type: 'line',\n            connectNulls: true,\n            name: `${currentStock[1]}/${currentStock[0]}`,\n          },\n        ];\n\n        stockDataPercent.series = [\n          ...stockDataPercent.series,\n          {\n            data: stock.map((el) => {\n              if (el[4] !== '0')\n                return getPercent(targetDateValue, parseInt(el[4], 10));\n              return null;\n            }),\n            type: 'line',\n            connectNulls: true,\n            name: `${currentStock[1]}/${currentStock[0]}`,\n          },\n        ];\n      });\n      setOption(stockData);\n      setOptionUs(stockDataUs);\n      setOptionPercent(stockDataPercent);\n      setLoaded(true);\n    });\n  }, [\n    startDate,\n    endDate,\n    stockList,\n    tagName,\n    history,\n    stockListPage.path,\n    percentTargetDate,\n    getStockData,\n  ]);\n\n  const onChartClick = (params) => {\n    const { name } = params;\n    setPercentTargetDate(name);\n  };\n\n  return (\n    <Container>\n      <StockCalendar\n        startDate={startDate}\n        setStartDate={setStartDate}\n        endDate={endDate}\n        setEndDate={setEndDate}\n      />\n      {isLoaded && tagStockList.find((el) => el[2] === LOCALE.KO) && (\n        <StockChart stockList={tagStockList} chartData={option} />\n      )}\n\n      {isLoaded && tagStockList.find((el) => el[2] === LOCALE.US) && (\n        <StockChart stockList={tagStockList} chartData={optionUs} />\n      )}\n      {isLoaded && (\n        <>\n          {percentTargetDate}일( 기준일 = 0% ) 대비 상승/하락 률 ( 그래프 클릭\n          날짜 변경 )\n          <StockChart\n            stockList={tagStockList}\n            chartData={optionPercent}\n            onEvents={{\n              click: onChartClick,\n            }}\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Tag;\n","export const getStockListByTag = (stockList, tag) => {\n  return stockList.filter((el) => el[6] && el[6].includes(tag));\n};\n","import styled from 'styled-components';\n\nexport const AppBody = styled.div`\n  height: 100%;\n`;\n","import React from 'react';\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom';\nimport { GlobalTheme } from 'remember-ui';\n\nimport { StockProvider } from 'context/StockContext';\nimport Routes from 'routers/routes';\nimport CommonRoute from 'routers/CommonRoute';\nimport NavBar from 'components/NavBar/NavBar';\nimport Stock from 'pages/Stock/Stock';\nimport StockList from 'pages/StockList/StockList';\nimport Dashboard from 'pages/Dashboard/Dashboard';\nimport Tag from 'pages/Tag/Tag';\n\nimport { AppBody } from './App.styles';\n\nfunction App() {\n  const { root, stock, stockListPage, tag } = Routes;\n\n  return (\n    <StockProvider>\n      <BrowserRouter>\n        <AppBody>\n          <GlobalTheme />\n          <NavBar />\n          <Switch>\n            <CommonRoute path={stock.path}>\n              <Stock />\n            </CommonRoute>\n            <CommonRoute path={tag.path}>\n              <Tag />\n            </CommonRoute>\n            <CommonRoute path={stockListPage.path}>\n              <StockList />\n            </CommonRoute>\n            <CommonRoute path={root.path}>\n              <Dashboard />\n            </CommonRoute>\n            <Redirect to={stockListPage.path} />\n          </Switch>\n        </AppBody>\n      </BrowserRouter>\n    </StockProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // console.log(\n              //   'New content is available and will be used when all ' +\n              //     'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              // );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // console.log('Content is cached for offline use.');\n\n              // Execute callback\n              // eslint-disable-next-line no-lonely-if\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}