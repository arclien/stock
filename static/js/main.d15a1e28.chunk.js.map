{"version":3,"sources":["services/stock.js","context/StockContext.js","routers/routes.js","routers/CommonRoute.js","components/NavBar/Navbar.styles.js","components/NavBar/NavBar.js","hooks/useDebounce.js","constants/chart.js","constants/locale.js","components/StockChart/StockChart.js","constants/calendar.js","utils/day.js","components/StockCalendar/StockCalendar.styles.js","components/StockCalendar/StockCalendar.js","utils/chart.js","utils/utils.js","pages/Stock/Stock.styles.js","pages/Stock/Stock.js","constants/trello.js","services/trelloApi.js","services/trello.js","pages/StockList/StockList.styles.js","pages/StockList/StockList.js","pages/Dashboard/Dashboard.styles.js","pages/Dashboard/Dashboard.js","pages/Tag/Tag.styles.js","pages/Tag/Tag.js","utils/tag.js","App.styles.js","App.js","serviceWorker.js","index.js"],"names":["fetchStockListFromCsv","a","fetch","window","location","origin","response","returnValue","text","data","split","forEach","row","columns","push","fetchStockDataFromCsv","stockNumber","slice","Context","createContext","Provider","STOCK_DATA_LIST","Consumer","StockProvider","children","useState","stockList","setStockList","tagList","setTagList","useEffect","filter","el","length","reduce","acc","cur","code","name","nation","user_id","created_at","updated_at","tag_list","tags","Set","map","concat","trim","replace","getStockData","stockCode","value","state","actions","StockContext","path","url","description","CommonRoute","rest","Container","styled","div","flexColumnCenterX","StockList","StockItem","Link","StockText","Chip","active","css","mobileOnly","font","size","color","gold200","PageTitle","textExtraLarge","gray400","SearchInput","BaseInput","NavBar","pathname","useLocation","stock","Routes","tag","root","stockListPage","currentStock","setCurrentStock","searchResults","setSearchResults","searchKeyword","setSearchKeyword","debounceSearchKeyword","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","useContext","_stock","find","result","includes","getRelatedStockList","useCallback","_tag","to","key","type","placeholder","maxLength","onChange","target","chartOption","xAxis","yAxis","series","chartStyle","height","width","LOCALE","US","KO","CURRENCY","defaultOption","legend","tooltip","trigger","axisPointer","animation","axisLabel","formatter","StockChart","chartData","onEvents","style","isLoaded","setLoaded","option","setOption","EchartsReact","setEchartsReact","_option","instance","getEchartsInstance","clear","ref","e","OffsetList","getTodayDate","dayjs","format","isWeekend","date","day","getAdjustDateToWeekDay","index","getDayOfWeek","subtract","flexCenterY","CalendarContainer","flexCenter","DateInput","MaskingInput","OffsetContainer","RadioButton","NewBaseButton","isChecked","yellow100","gray100","OffsetDate","Radio","Cursor","StockCalendar","startDate","setStartDate","endDate","setEndDate","calendarOffset","setCalendarOffset","handleChange","newDate","Date","today","handleDateByOffset","dir","_endDate","_startDate","offsetValue","add","isAfter","isBefore","onClick","mask","required","outline","offset","handleCalendarOffset","getPercent","number","parseInt","Math","round","getCurrency","getIndexOfDayBetween","startDateIndex","findIndex","endDateIndex","getTargetDateValue","targetDate","_valueDate","getMinMaxValue","values","minValue","min","maxValue","max","Stock","useRouteMatch","params","history","useHistory","optionPercent","setOptionPercent","percentTargetDate","setPercentTargetDate","basePriceValue","setBasePriceValue","stockData","stockDataPercent","stockAll","targetDateValue","_basePriceValue","parseFloat","connectNulls","lineStyle","markLine","slient","symbol","label","position","distance","getData","click","process","TRELLO_BOARD_STUDY_ID","REACT_APP_TRELLO_BOARD_STUDY_ID","TRELLO_LIST_ID","REACT_APP_TRELLO_LIST_ID","TRELLO_API_KEY","REACT_APP_TRELLO_CARD_ID","REACT_APP_TRELLO_API_KEY","Trello","require","reqTrello","callback","Promise","resolve","then","localStorage","getItem","existingToken","auth","scope","read","write","account","expiration","token","catch","getTrello","get","postTrello","post","getCardsOnBoard","listId","field","createCard","idList","labels","createdAt","updatedAt","basePrice","idLabels","_label","id","desc","base_price","newCard","JSON","stringify","pos","due","toISOString","toString","flexContainer","List","Input","StockInput","Dropdown","BasePopover","DropdownList","PopoverItem","DropdownText","AddButton","stockDefaultValue","userId","cards","setCards","setLabels","setStock","_cards","_labels","prevState","res","disabled","placement","content","Object","keys","_nation","readOnly","card","parse","Dashboard","optionHigh","setOptionHigh","optionExtraHigh","setOptionExtraHigh","optionLow","setOptionLow","optionUs","setOptionUs","stockDataHigh","stockDataExtraHigh","stockDataLow","stockDataUs","fetchAllData","all","currency","priceList","mean","Tag","tagName","tagStockList","setTagStockList","_tagStockList","getStockListByTag","AppBody","App","console","log","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d15a1e28.chunk.js","sourcesContent":["export const fetchStockListFromCsv = async () => {\n  const response = await fetch(\n    `${window.location.origin}/stock/data/stock_list.csv`\n  );\n  const returnValue = [];\n  const data = await response.text();\n  const table = data.split(/\\n/);\n  table.forEach((row) => {\n    const columns = row.split(',');\n    returnValue.push(columns);\n  });\n  return returnValue;\n};\n\nexport const fetchStockDataFromCsv = async (stockNumber) => {\n  const response = await fetch(\n    `${window.location.origin}/stock/data/${stockNumber}.csv`\n  );\n  const returnValue = [];\n  const data = await response.text();\n  const table = data.split(/\\n/).slice(1);\n  table.forEach((row) => {\n    const columns = row.split(',');\n    returnValue.push(columns);\n  });\n  return returnValue;\n};\n","import React, { useState, createContext, useEffect } from 'react';\n\nimport { fetchStockListFromCsv, fetchStockDataFromCsv } from 'services/stock';\n\nconst Context = createContext();\n\nconst { Provider, Consumer: StockConsumer } = Context;\nlet STOCK_DATA_LIST = {};\n\nconst StockProvider = ({ children }) => {\n  const [stockList, setStockList] = useState([]);\n  const [tagList, setTagList] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const data = await fetchStockListFromCsv();\n      setStockList(data.slice(1).filter((el) => el.length > 1));\n      STOCK_DATA_LIST = data\n        .slice(1)\n        .filter((el) => el.length > 1)\n        .reduce(\n          (acc, cur) => ({\n            ...acc,\n            [cur[0]]: {\n              code: cur[0],\n              name: cur[1],\n              nation: cur[2],\n              user_id: cur[3],\n              created_at: cur[4],\n              updated_at: cur[5],\n              tag_list: cur[6],\n              data: [],\n            },\n          }),\n          {}\n        );\n      const tags = new Set([\n        ...data\n          .slice(1)\n          .filter((el) => el.length > 1)\n          .map((el) => el[6] && el[6].split('/'))\n          .reduce((acc, cur) => acc.concat(cur), [])\n          .map((el) => el.trim().replace(/\"/gi, ''))\n          .filter((el) => el !== ''),\n      ]);\n      setTagList([...tags]);\n    })();\n  }, []);\n\n  const getStockData = async (stockCode) => {\n    if (!stockCode) return [];\n\n    if (\n      STOCK_DATA_LIST[stockCode]?.data &&\n      STOCK_DATA_LIST[stockCode]?.data.length > 0\n    ) {\n      return STOCK_DATA_LIST[stockCode].data;\n    }\n    const data = await fetchStockDataFromCsv(stockCode);\n\n    STOCK_DATA_LIST = {\n      ...STOCK_DATA_LIST,\n      [stockCode]: {\n        ...STOCK_DATA_LIST[stockCode],\n        data,\n      },\n    };\n    return data;\n  };\n\n  return (\n    <Provider\n      value={{\n        state: {\n          stockList,\n          tagList,\n          STOCK_DATA_LIST,\n        },\n        actions: { getStockData },\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\nconst StockContext = Context;\n\nexport { StockProvider, StockConsumer, StockContext };\n","const root = {\n  path: '/stock',\n  url: '/stock',\n  description: 'Dashboard Page',\n};\n\nconst stock = {\n  path: '/stock/code/:code',\n  url: '/stock/code/',\n  description: 'Stock Page',\n};\n\nconst stockListPage = {\n  path: '/stock/list',\n  url: '/stock/list/',\n  description: 'Stock List Page',\n};\n\nconst tag = {\n  path: '/stock/tag/:tag',\n  url: '/stock/tag/',\n  description: 'Tag Page',\n};\n\nexport default {\n  root,\n  stock,\n  stockListPage,\n  tag,\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst CommonRoute = ({ children, path, ...rest }) => {\n  return (\n    <Route path={path} {...rest}>\n      {children}\n    </Route>\n  );\n};\n\nexport default CommonRoute;\n","import styled, { css } from 'styled-components';\nimport {\n  Chip,\n  flexColumnCenterX,\n  textExtraLarge,\n  gray400,\n  BaseInput,\n  font,\n  gold200,\n  mobileOnly,\n} from 'remember-ui';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  ${flexColumnCenterX}\n  padding:20px;\n`;\n\nexport const StockList = styled.div`\n  width: 100%;\n`;\nexport const StockItem = styled(Link)`\n  display: inline-block;\n  margin: 5px;\n  cursor: pointer;\n  text-decoration: none;\n`;\n\nexport const StockText = styled(Chip)`\n  ${({ active }) =>\n    active &&\n    css`\n      font-weight: bold;\n    `}\n  &:hover,\n  &:focus {\n    font-weight: bold;\n  }\n\n  ${mobileOnly(css`\n    ${font({ size: '12px', color: gold200 })}\n    padding: 5px;\n    min-width: 40px;\n  `)}\n`;\n\nexport const PageTitle = styled.div`\n  ${textExtraLarge({ color: gray400 })}\n`;\n\nexport const SearchInput = styled(BaseInput)`\n  width: 220px;\n`;\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport useDebounce from 'hooks/useDebounce';\nimport Routes from 'routers/routes';\nimport { StockContext } from 'context/StockContext';\n\nimport {\n  Container,\n  StockList,\n  StockItem,\n  StockText,\n  PageTitle,\n  SearchInput,\n} from './Navbar.styles';\n\nconst NavBar = () => {\n  const { pathname } = useLocation();\n  const { stock, tag, root, stockListPage } = Routes;\n  const [currentStock, setCurrentStock] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const debounceSearchKeyword = useDebounce(searchKeyword, 500);\n\n  const {\n    state: { stockList, tagList },\n  } = useContext(StockContext);\n\n  useEffect(() => {\n    const stockCode = pathname.replace(stock.url, '');\n    const _stock = stockList.find((el) => el[0] === stockCode);\n    setCurrentStock(_stock);\n  }, [pathname, stock.url, stockList]);\n\n  useEffect(() => {\n    (async function searchStockList() {\n      if (debounceSearchKeyword) {\n        const result = stockList.filter(\n          (el) =>\n            el[0].includes(debounceSearchKeyword) ||\n            el[1].includes(debounceSearchKeyword) ||\n            el[6].includes(debounceSearchKeyword)\n        );\n        setSearchResults([...result]);\n      } else {\n        setSearchResults([]);\n      }\n    })();\n  }, [debounceSearchKeyword, stockList]);\n\n  const getRelatedStockList = useCallback(\n    (_tag) => [\n      ...stockList.reduce(\n        (acc, cur) => (cur[6].includes(_tag) ? acc.concat([cur]) : acc),\n        []\n      ),\n    ],\n    [stockList]\n  );\n\n  const handleChange = ({ target: { value } }) => {\n    setSearchKeyword(value.trim());\n  };\n\n  return (\n    <Container>\n      <StockList>\n        <StockItem to={`${root.path}`}>\n          <StockText active={pathname === `${root.path}`}>\n            {`${root.description}`}\n          </StockText>\n        </StockItem>\n        <StockItem to={`${stockListPage.path}`}>\n          <StockText active={pathname === `${stockListPage.path}`}>\n            {`${stockListPage.description}`}\n          </StockText>\n        </StockItem>\n        {tagList &&\n          tagList.map((el) => (\n            <StockItem key={el} to={`${tag.url}${el}`}>\n              <StockText active={pathname === `${tag.url}${el}`}>\n                {`${el}`}\n              </StockText>\n            </StockItem>\n          ))}\n      </StockList>\n\n      {pathname.includes(tag.url) && (\n        <StockList>\n          <PageTitle>\n            {pathname.replace(tag.url, '')} 태그 관련 종목\n            <br />\n            {getRelatedStockList(pathname.replace(tag.url, '')).map((el) => (\n              <StockItem key={el} to={`${stock.url}${el[0]}`}>\n                <StockText active={pathname === `${stock.url}${el[0]}`}>\n                  {`${el[1]} (${el[0]})`}\n                </StockText>\n              </StockItem>\n            ))}\n          </PageTitle>\n        </StockList>\n      )}\n\n      {currentStock && (\n        <StockList>\n          <PageTitle>\n            {`${currentStock[1]} (${currentStock[0]})`} 종목 관련 태그\n            <br />\n            {currentStock[6].split('/').map((el) => (\n              <StockItem key={el} to={`${tag.url}${el}`}>\n                <StockText active={pathname === `${tag.url}${el}`}>\n                  {`${el}`}\n                </StockText>\n              </StockItem>\n            ))}\n          </PageTitle>\n        </StockList>\n      )}\n      <StockList>\n        <SearchInput\n          type=\"text\"\n          name=\"searchKeyword\"\n          placeholder=\"종목, 코드, 태그를 검색\"\n          maxLength={20}\n          value={searchKeyword}\n          onChange={handleChange}\n        />\n        {searchResults &&\n          searchResults.map((el) => (\n            <StockItem key={el[0]} to={`${stock.url}${el[0]}`}>\n              <StockText active={pathname === `${stock.url}${el[0]}`}>\n                {`${el[1]} (${el[0]})`}\n              </StockText>\n            </StockItem>\n          ))}\n      </StockList>\n    </Container>\n  );\n};\n\nexport default NavBar;\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      // value 값이 바뀌면 이전 setTimeout을 clear 해줌\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","export const chartOption = { xAxis: {}, yAxis: {}, series: [] };\nexport const chartStyle = { height: '700px', width: '100%' };\n","export const LOCALE = {\n  US: 'us',\n  KO: 'ko',\n};\n\nexport const CURRENCY = {\n  US: '$',\n  KO: '원',\n};\n","import React, { useEffect, useState } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nimport { chartStyle } from 'constants/chart';\nimport { CURRENCY } from 'constants/locale';\n\nconst defaultOption = {\n  legend: {\n    // data: stockList.map((el) => `${el[1]}/${el[0]}`),\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'cross',\n      animation: false,\n    },\n    // formatter: function (params) {\n    //   console.log(params);\n    //   return `날짜 : ${params[0].name} <br> 가격 : ${params[0].value} <br> 종목 :  ${params[0].seriesName}`;\n    // },\n  },\n  xAxis: {\n    type: 'category',\n    data: [],\n  },\n  yAxis: {\n    type: 'value',\n    axisLabel: {\n      formatter: `{value} ${CURRENCY.KO}`,\n    },\n    // min: 0,\n    // max: 0,\n    // interval: 0,\n  },\n  series: [],\n};\n\nconst StockChart = ({\n  chartData,\n  onEvents,\n  stockList,\n  style = { ...chartStyle },\n}) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [option, setOption] = useState({ ...defaultOption });\n  const [EchartsReact, setEchartsReact] = useState(null);\n\n  useEffect(() => {\n    const _option = {\n      legend: {\n        ...defaultOption.legend,\n        data: stockList.map((el) => `${el[1]}/${el[0]}`),\n      },\n      tooltip: {\n        ...defaultOption.tooltip,\n      },\n      xAxis: {\n        ...defaultOption.xAxis,\n        ...chartData.xAxis,\n      },\n      yAxis: {\n        ...defaultOption.yAxis,\n        ...chartData.yAxis,\n      },\n      series: [...defaultOption.series, ...chartData.series],\n    };\n    setOption(_option);\n\n    const instance = EchartsReact?.getEchartsInstance();\n    if (instance) {\n      instance.clear();\n      instance.setOption(_option);\n    }\n\n    setLoaded(true);\n  }, [EchartsReact, chartData, stockList]);\n\n  return (\n    <>\n      {isLoaded && (\n        <ReactEcharts\n          ref={(e) => {\n            setEchartsReact(e);\n          }}\n          style={style}\n          option={option}\n          onEvents={onEvents}\n        />\n      )}\n    </>\n  );\n};\n\nexport default StockChart;\n","export const CalendarFormat = 'YYYY-MM-DD';\nexport const defaultOffset = '1 year';\nexport const OffsetList = [\n  { name: '1 month', value: 1 },\n  { name: '3 month', value: 3 },\n  { name: '6 month', value: 6 },\n  { name: '1 year', value: 12 },\n  { name: '3 year', value: 36 },\n  { name: '5 year', value: 60 },\n];\nexport const chartStartDate = '2015-01-02';\n","import dayjs from 'dayjs';\n\nimport { CalendarFormat } from 'constants/calendar';\n\nexport const getTodayDate = () => dayjs().format(CalendarFormat);\n\nexport const isWeekend = (date) =>\n  dayjs(date).day() === 0 || dayjs(date).day() === 6;\n\nexport const getDayOfWeek = (date) => dayjs(date).day();\n\nexport const getAdjustDateToWeekDay = (date) => {\n  const day = getDayOfWeek(date);\n  const index = day === 0 ? 2 : 1;\n  return dayjs(date).subtract(index, 'day').format(CalendarFormat);\n};\n","import styled, { css } from 'styled-components';\nimport {\n  flexCenter,\n  Radio,\n  MaskingInput,\n  flexCenterY,\n  NewBaseButton,\n  font,\n  text,\n  gray100,\n  yellow100,\n  mobileOnly,\n} from 'remember-ui';\n\nexport const Container = styled.div`\n  ${flexCenterY}\n\n  width:100%;\n  justify-content: space-between;\n\n  ${mobileOnly(css`\n    flex-direction: column;\n    justify-content: center;\n  `)}\n`;\n\nexport const CalendarContainer = styled.div`\n  ${flexCenter}\n`;\n\nexport const DateInput = styled(MaskingInput)`\n  padding: 0px 10px;\n`;\n\nexport const OffsetContainer = styled.div`\n  ${flexCenter}\n  padding:20px;\n\n  ${mobileOnly(css`\n    padding: 20px 0px;\n  `)}\n`;\n\nexport const RadioButton = styled(NewBaseButton)`\n  ${font({ size: '15px', color: text })}\n\n  ${({ isChecked }) =>\n    isChecked &&\n    css`\n      background-color: ${yellow100};\n    `}\n\n  border-radius:0px;\n  border: 1px solid ${gray100};\n\n  ${mobileOnly(css`\n    display: none;\n    ${font({ size: '12px', color: text })}\n    padding:0px;\n  `)}\n`;\n\nexport const OffsetDate = styled(Radio)``;\n\nexport const Cursor = styled.div`\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\nimport dayjs from 'dayjs';\n\nimport {\n  defaultOffset,\n  OffsetList,\n  chartStartDate,\n  CalendarFormat,\n} from 'constants/calendar';\nimport { isWeekend, getAdjustDateToWeekDay, getTodayDate } from 'utils/day';\n\nimport {\n  CalendarContainer,\n  DateInput,\n  Container,\n  OffsetContainer,\n  OffsetDate,\n  Cursor,\n  RadioButton,\n} from './StockCalendar.styles';\n\nconst StockCalendar = ({ startDate, setStartDate, endDate, setEndDate }) => {\n  const [calendarOffset, setCalendarOffset] = useState(defaultOffset);\n\n  const handleChange = (e) => {\n    const target = e.target.name;\n    const date = e.target.value;\n    if (date.length === 10) {\n      const newDate = new Date(date);\n      const today = new Date();\n      const _chartStartDate = new Date(chartStartDate);\n      if (+newDate >= +_chartStartDate && +newDate <= +today) {\n        target === 'startDate' ? setStartDate(date) : setEndDate(date);\n      }\n    }\n  };\n\n  const handleCalendarOffset = (offset, offsetValue) => {\n    let date = dayjs(endDate, CalendarFormat);\n    date = date.subtract(offsetValue, 'month');\n    setCalendarOffset(offset);\n    if (isWeekend(date)) {\n      date = getAdjustDateToWeekDay(date);\n    }\n    setStartDate(dayjs(date).format(CalendarFormat));\n  };\n\n  const handleDateByOffset = (dir) => {\n    let _endDate = dayjs(endDate, CalendarFormat);\n    let _startDate = dayjs(startDate, CalendarFormat);\n    const offsetValue = OffsetList.find((el) => el.name === calendarOffset)\n      .value;\n    if (dir === 'next') {\n      _endDate = _endDate.add(offsetValue, 'month');\n      _startDate = _startDate.add(offsetValue, 'month');\n      if (dayjs(_endDate).isAfter(getTodayDate())) {\n        // alert('오늘 이후의 날짜는 선택할 수 없습니다.');\n        return;\n      }\n    } else if (dir === 'prev') {\n      _endDate = _endDate.subtract(offsetValue, 'month');\n      _startDate = _startDate.subtract(offsetValue, 'month');\n\n      if (dayjs(_startDate).isBefore(chartStartDate)) {\n        // alert(`${chartStartDate} 이전의 날짜는 선택할 수 없습니다.`);\n        return;\n      }\n    }\n\n    if (isWeekend(_endDate)) {\n      _endDate = getAdjustDateToWeekDay(_endDate);\n    }\n    if (isWeekend(_startDate)) {\n      _startDate = getAdjustDateToWeekDay(_startDate);\n    }\n    setEndDate(dayjs(_endDate).format(CalendarFormat));\n    setStartDate(dayjs(_startDate).format(CalendarFormat));\n  };\n\n  return (\n    <Container>\n      <CalendarContainer>\n        <Cursor onClick={() => handleDateByOffset('prev')}>{'<'}</Cursor>\n        <DateInput\n          mask={[\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            '-',\n            /[0-9]/,\n            /[0-9]/,\n            '-',\n            /[0-9]/,\n            /[0-9]/,\n          ]}\n          type=\"text\"\n          name=\"startDate\"\n          value={startDate}\n          required\n          onChange={handleChange}\n          placeholder=\"8자리 숫자 입력(2015-01-02)\"\n        />\n        ~\n        <DateInput\n          mask={[\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            '-',\n            /[0-9]/,\n            /[0-9]/,\n            '-',\n            /[0-9]/,\n            /[0-9]/,\n          ]}\n          type=\"text\"\n          name=\"endDate\"\n          value={endDate}\n          required\n          onChange={handleChange}\n          placeholder=\"8자리 숫자 입력(2015-01-02)\"\n        />\n        <Cursor onClick={() => handleDateByOffset('next')}>{'>'}</Cursor>\n      </CalendarContainer>\n      <OffsetContainer>\n        {OffsetList &&\n          OffsetList.map((el) => (\n            <RadioButton\n              isChecked={calendarOffset === el.name}\n              size=\"medium\"\n              outline\n              key={el.value}\n            >\n              <OffsetDate\n                isChecked={calendarOffset === el.name}\n                onClick={() => handleCalendarOffset(el.name, el.value)}\n              />\n              <span>{el.name}</span>\n            </RadioButton>\n          ))}\n      </OffsetContainer>\n    </Container>\n  );\n};\n\nexport default StockCalendar;\n","import dayjs from 'dayjs';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\n\nimport { CalendarFormat } from 'constants/calendar';\nimport { LOCALE, CURRENCY } from 'constants/locale';\nimport { getRoundTwoPrecision } from 'utils/utils';\n\nexport const getPercent = (target, value) => {\n  return getRoundTwoPrecision(\n    ((parseInt(value, 10) - parseInt(target, 10)) / parseInt(target, 10)) * 100\n  );\n};\n\nexport const generateDayBetween = (startDate, endDate) => {\n  let _start = dayjs(startDate).format(CalendarFormat);\n  const _end = dayjs(endDate).format(CalendarFormat);\n  const days = [];\n\n  dayjs.extend(isSameOrBefore);\n  while (dayjs(_start).isSameOrBefore(_end)) {\n    days.push([_start, '0', '0', '0', '0', '0', '0']);\n    _start = dayjs(_start).add(1, 'day').format(CalendarFormat);\n  }\n\n  return days;\n};\n\nexport const getCurrency = (stock) => {\n  const nation = (stock && stock[2]) || '';\n  if (nation === LOCALE.KO) {\n    return CURRENCY.KO;\n  }\n  if (nation === LOCALE.US) {\n    return CURRENCY.US;\n  }\n  return '';\n};\n\nexport const getIndexOfDayBetween = (stock, startDate, endDate) => {\n  let startDateIndex = stock.findIndex(\n    (el) => el[0] === dayjs(startDate).format(CalendarFormat)\n  );\n  startDateIndex = startDateIndex <= 0 ? 0 : startDateIndex;\n\n  let endDateIndex = stock.findIndex(\n    (el) => el[0] === dayjs(endDate).format(CalendarFormat)\n  );\n  endDateIndex = endDateIndex <= 0 ? stock.length - 1 : endDateIndex;\n  return { startDateIndex, endDateIndex };\n};\n\nexport const getTargetDateValue = (stock, targetDate) => {\n  let value = null;\n  if (stock.find((el) => el[0] === targetDate)) {\n    value = parseInt(stock.find((el) => el[0] === targetDate)[4], 10);\n  }\n  if (!value || value === 0) {\n    const _valueDate = stock.find((el) => el[4] !== '0');\n    value = _valueDate ? _valueDate[4] : null;\n  }\n  return value;\n};\n\nexport const getMinMaxValue = (stock) => {\n  const values = stock\n    .map((el) => {\n      if (el[4] !== '0') return parseInt(el[4], 10);\n      return null;\n    })\n    .filter((el) => el);\n\n  const minValue = parseInt(Math.min(...values), 10);\n  const maxValue = parseInt(Math.max(...values), 10);\n  return { minValue, maxValue };\n};\n","export const getRoundTwoPrecision = (number) => Math.round(number * 100) / 100;\n\nexport const getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n","import styled from 'styled-components';\nimport { flexColumnCenterX } from 'remember-ui';\n\nexport const Container = styled.div`\n  ${flexColumnCenterX}\n  padding:20px;\n`;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport Routes from 'routers/routes';\nimport { chartOption } from 'constants/chart';\nimport { LOCALE } from 'constants/locale';\nimport StockChart from 'components/StockChart/StockChart';\nimport StockCalendar from 'components/StockCalendar/StockCalendar';\nimport { getTodayDate } from 'utils/day';\nimport {\n  getCurrency,\n  getPercent,\n  getIndexOfDayBetween,\n  getTargetDateValue,\n  getMinMaxValue,\n} from 'utils/chart';\nimport { StockContext } from 'context/StockContext';\n\nimport { Container } from './Stock.styles';\n\nconst Stock = () => {\n  const {\n    params: { code: stockCode },\n  } = useRouteMatch();\n  const {\n    state: { stockList },\n    actions: { getStockData },\n  } = useContext(StockContext);\n\n  const history = useHistory();\n  const { stockListPage } = Routes;\n\n  const [isLoaded, setLoaded] = useState(false);\n  const [option, setOption] = useState({\n    ...chartOption,\n  });\n  const [optionPercent, setOptionPercent] = useState({\n    ...chartOption,\n  });\n\n  const [startDate, setStartDate] = useState('2020-01-02');\n  const [endDate, setEndDate] = useState(getTodayDate());\n  const [percentTargetDate, setPercentTargetDate] = useState(startDate);\n  const [basePriceValue, setBasePriceValue] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoaded(false);\n      const currentStock = stockList.find((el) => el[0] === stockCode);\n      if (stockList.length > 0 && !currentStock)\n        history.replace(stockListPage.path);\n\n      const stockData = { ...chartOption };\n      const stockDataPercent = { ...chartOption };\n\n      const stockAll = await getStockData(stockCode);\n      const { startDateIndex, endDateIndex } = getIndexOfDayBetween(\n        stockAll,\n        startDate,\n        endDate\n      );\n\n      const stock = stockAll.slice(startDateIndex, endDateIndex + 1);\n\n      const targetDateValue = getTargetDateValue(stock, percentTargetDate);\n\n      const _basePriceValue =\n        currentStock &&\n        currentStock.length > 0 &&\n        parseInt(currentStock[7], 10);\n\n      setBasePriceValue(_basePriceValue);\n\n      const { minValue, maxValue } = getMinMaxValue(stock);\n\n      // x축\n      stockData.xAxis = {\n        ...stockData.xAxis,\n        data: stock.map((el) => el[0]),\n      };\n      stockDataPercent.xAxis = {\n        ...stockData.xAxis,\n      };\n\n      // y축\n      stockData.yAxis = {\n        ...stockData.yAxis,\n        min: minValue,\n        max: maxValue,\n        axisLabel: {\n          formatter: `{value} ${getCurrency(currentStock)}`,\n        },\n      };\n      stockDataPercent.yAxis = {\n        ...stockDataPercent.yAxis,\n        axisLabel: {\n          formatter: '{value} %',\n        },\n      };\n\n      // series Data\n      stockData.series = [\n        ...stockData.series,\n        {\n          data: stock.map((el) => {\n            if (el[4] !== '0') {\n              if (currentStock && currentStock[2] === LOCALE.KO) {\n                return parseInt(el[4], 10);\n              }\n              if (currentStock && currentStock[2] === LOCALE.US) {\n                return parseFloat(el[4]);\n              }\n              return parseInt(el[4], 10);\n            }\n            return null;\n          }),\n          type: 'line',\n          connectNulls: true,\n          name: `${currentStock ? currentStock[1] : ''}/${stockCode}`,\n          lineStyle: {\n            color: '#ff457e',\n          },\n          markLine: {\n            slient: true,\n            symbol: ['none', 'none'],\n            lineStyle: {\n              color: '#f58c23',\n              width: 2,\n              type: 'solid',\n            },\n            data: [\n              {\n                name: 'Base Price',\n                yAxis: basePriceValue || 0,\n                label: {\n                  formatter: '{c}',\n                  position: 'end',\n                  distance: 10,\n                },\n              },\n            ],\n          },\n        },\n      ];\n\n      stockDataPercent.series = [\n        ...stockDataPercent.series,\n        {\n          data: stock.map((el) => {\n            if (el[4] !== '0')\n              return getPercent(targetDateValue, parseInt(el[4], 10));\n            return null;\n          }),\n          type: 'line',\n          connectNulls: true,\n          name: `${currentStock ? currentStock[1] : ''}/${stockCode}`,\n          lineStyle: {\n            color: '#ff457e',\n            width: 3,\n          },\n        },\n        {\n          data: stock.map((el) => {\n            if (el[4] !== '0')\n              return getPercent(_basePriceValue, parseInt(el[4], 10));\n            return null;\n          }),\n          type: 'line',\n          connectNulls: true,\n          name: `${currentStock ? currentStock[1] : ''}/${stockCode}`,\n          lineStyle: {\n            color: 'rgba(87,159,251,.5)',\n          },\n        },\n      ];\n\n      setOption(stockData);\n      setOptionPercent(stockDataPercent);\n      setLoaded(true);\n    };\n\n    getData();\n  }, [\n    basePriceValue,\n    endDate,\n    getStockData,\n    history,\n    percentTargetDate,\n    startDate,\n    stockCode,\n    stockList,\n    stockListPage.path,\n  ]);\n\n  const onChartClick = (params) => {\n    const { name } = params;\n    setPercentTargetDate(name);\n  };\n\n  return (\n    <Container>\n      <StockCalendar\n        startDate={startDate}\n        setStartDate={setStartDate}\n        endDate={endDate}\n        setEndDate={setEndDate}\n      />\n      {isLoaded && (\n        <>\n          종가 그래프( Y축 : 기간 내 최저가 ~ 최고가)\n          <StockChart\n            stockList={stockList}\n            chartData={option}\n            style={{ height: '300px', width: '100%' }}\n          />\n        </>\n      )}\n      {isLoaded && (\n        <>\n          {percentTargetDate}일( 기준일 = 0% ) 대비 상승/하락 률 ( 그래프 클릭\n          날짜 변경 )\n          <br />\n          {basePriceValue > 0 && (\n            <>기준 가격(0%): {basePriceValue} 원 대비 상승/하락 률</>\n          )}\n          <StockChart\n            stockList={stockList}\n            chartData={optionPercent}\n            onEvents={{\n              click: onChartClick,\n            }}\n            style={{ height: '300px', width: '100%' }}\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Stock;\n","export const {\n  REACT_APP_TRELLO_BOARD_STUDY_ID: TRELLO_BOARD_STUDY_ID,\n  REACT_APP_TRELLO_LIST_ID: TRELLO_LIST_ID,\n  REACT_APP_TRELLO_CARD_ID: TRELLO_CARD_ID,\n  REACT_APP_TRELLO_API_KEY: TRELLO_API_KEY,\n} = process.env;\n\nexport const TRELLO_COLLECTION_TYPE = {\n  CARDS: 'cards',\n  CHECKLISTS: 'checklists',\n  BOARDS: 'boards',\n  LISTS: 'lists',\n  MEMBERS: 'members',\n  ORGANIZATIONS: 'organizations',\n  ACTIONS: 'actions',\n};\n\nexport const TRELLO_LABEL_COLOR = [\n  'yellow',\n  'purple',\n  'blue',\n  'red',\n  'green',\n  'orange',\n  'black',\n  'sky',\n  'pink',\n  'lime',\n];\n","import { TRELLO_API_KEY } from 'constants/trello';\n\nconst TrelloWeb = require('trello-web');\n\nconst Trello = new TrelloWeb(TRELLO_API_KEY);\n\nconst reqTrello = (callback) => {\n  return Promise.resolve()\n    .then(() => localStorage.getItem('trello_token'))\n    .then((existingToken) => {\n      if (existingToken) {\n        Trello.token = existingToken;\n        Trello.key = TRELLO_API_KEY;\n      } else {\n        return Trello.auth({\n          name: 'Stock App',\n          scope: {\n            read: true,\n            write: true,\n            account: true,\n          },\n          expiration: 'never',\n        });\n      }\n    })\n    .then(() => {\n      return callback();\n    })\n    .catch(() => {\n      // console.log(\n      //   'something bad happened, or the user took too long to authorize.',\n      //   e\n      // );\n    });\n};\n\nexport const getTrello = (path, params = {}) => {\n  return reqTrello(() => {\n    return Trello.get(`/1/${path}`, params);\n  });\n};\n\nexport const postTrello = (path, params = {}) => {\n  return reqTrello(() => {\n    return Trello.post(`/1/${path}`, params);\n  });\n};\n\nexport const putTrello = (path, params = {}) => {\n  return reqTrello(() => {\n    return Trello.put(`/1/${path}`, params);\n  });\n};\n\nexport const deleteTrello = (path, params = {}) => {\n  return reqTrello(() => {\n    return Trello.delete(`/1/${path}`, params);\n  });\n};\n\nexport const getColletionTrello = (type, id, params = {}) => {\n  return reqTrello(() => {\n    return Trello.get(`/1/${type}/${id}`, params);\n  });\n};\n","import { getRandomInt } from 'utils/utils';\nimport { getTrello, getColletionTrello, postTrello } from 'services/trelloApi';\nimport {\n  TRELLO_COLLECTION_TYPE,\n  TRELLO_LABEL_COLOR,\n  // TRELLO_BOARD_STUDY_ID,\n} from 'constants/trello';\n\nexport const getMe = () => {\n  return getTrello('members/me');\n};\n\nexport const getMyBoards = () => {\n  return getTrello('members/me/boards');\n};\n\n/** \n################ Get from board\n* */\nexport const getListsOnBoard = (listId, field = 'all') => {\n  return getTrello(`boards/${listId}/lists/${field}`);\n};\n\nexport const getLabelsOnBoard = (listId) => {\n  return getTrello(`boards/${listId}/labels`);\n};\n\nexport const getCardsOnBoard = (listId, field = 'all') => {\n  return getTrello(`boards/${listId}/cards/${field}`);\n};\n\nexport const getCardOnBoardById = (listId, cardId) => {\n  return getTrello(`boards/${listId}/cards/${cardId}`);\n};\n\n/** \n################ Get collections by id\n* */\nexport const getCardById = (cardId) => {\n  return getColletionTrello(TRELLO_COLLECTION_TYPE.CARDS, cardId);\n};\n\nexport const getListById = (listId) => {\n  return getColletionTrello(TRELLO_COLLECTION_TYPE.LISTS, listId);\n};\n\nexport const createLabel = async (tagName, idBoard) => {\n  const index = getRandomInt(0, TRELLO_LABEL_COLOR.length);\n  const newLabel = {\n    name: tagName,\n    color: TRELLO_LABEL_COLOR[index],\n    idBoard,\n  };\n  const res = await postTrello('labels', newLabel);\n  return res;\n};\n\nexport const createCard = async (stock, idList, labels) => {\n  if (!stock) return;\n\n  const code = stock[0];\n  const name = stock[1];\n  const nation = stock[2];\n  const createdAt = stock[4];\n  const updatedAt = stock[5];\n  const tags = stock[6].split('/');\n  const basePrice = stock.length === 8 ? stock[7] : '';\n\n  const idLabels = [];\n  await tags.forEach(async (tag) => {\n    const label = labels.find((_label) => _label.name.trim() === tag.trim());\n    if (label) {\n      idLabels.push(label.id);\n    }\n  });\n\n  const desc = {\n    code,\n    name,\n    nation,\n    created_at: createdAt,\n    base_price: basePrice,\n  };\n\n  const newCard = {\n    idList,\n    name,\n    desc: JSON.stringify(desc),\n    pos: 'top',\n    due: updatedAt ? new Date(updatedAt).toISOString() : '',\n    idLabels: idLabels.toString(),\n  };\n  await postTrello('cards', newCard);\n};\n","import styled from 'styled-components';\nimport {\n  font,\n  gray100,\n  text,\n  Chip,\n  BaseInput,\n  flexContainer,\n  BasePopover,\n  PopoverItem,\n  NewBaseButton,\n} from 'remember-ui';\n\nexport const Container = styled.div`\n  ${flexContainer('flex-start', false, 'column')};\n\n  padding: 20px;\n`;\n\nexport const List = styled.div`\n  width: 100%;\n`;\n\nexport const StockItem = styled.div`\n  ${flexContainer('flex-start', 'center', 'row')};\n  margin: 5px;\n`;\n\nexport const StockText = styled(Chip)``;\n\nexport const Input = styled.div`\n  ${flexContainer('flex-start', 'center', 'row')};\n\n  width: 100%;\n`;\n\nexport const StockInput = styled(BaseInput)`\n  width: 120px;\n`;\n\nexport const Dropdown = styled(BasePopover)`\n  height: 500px;\n  max-height: 500px;\n  overflow-y: scroll;\n`;\n\nexport const DropdownList = styled(PopoverItem)``;\n\nexport const DropdownText = styled.div`\n  width: 120px;\n  font-size: 15px;\n  color: ${text};\n  height: 44px;\n  border-radius: 4px;\n  border: 1px solid ${gray100};\n  padding: 11px 12px;\n  box-sizing: border-box;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const AddButton = styled(NewBaseButton)`\n  ${font({ size: '15px', color: text })};\n\n  width: 200px;\n`;\n","import React, { useState, useEffect, useContext } from 'react';\nimport dayjs from 'dayjs';\n\nimport { StockContext } from 'context/StockContext';\nimport {\n  // TRELLO_CARD_ID,\n  TRELLO_LIST_ID,\n  TRELLO_BOARD_STUDY_ID,\n} from 'constants/trello';\nimport { CalendarFormat } from 'constants/calendar';\nimport { LOCALE } from 'constants/locale';\nimport {\n  // getMe,\n  // getMyBoards,\n  // getListsOnBoard,\n  getLabelsOnBoard,\n  getCardsOnBoard,\n  // getCardOnBoardById,\n  // getCardById,\n  // getListById,\n  // createLabel,\n  createCard,\n} from 'services/trello';\n\nimport {\n  AddButton,\n  Container,\n  List,\n  StockItem,\n  StockText,\n  Input,\n  StockInput,\n  Dropdown,\n  DropdownList,\n  DropdownText,\n} from './StockList.styles';\n\nconst stockDefaultValue = {\n  name: '',\n  code: '',\n  nation: LOCALE.KO,\n  userId: '1',\n  createdAt: dayjs(new Date()).format(CalendarFormat),\n  tags: '',\n  basePrice: '',\n};\n\nconst StockList = () => {\n  const {\n    state: { tagList },\n  } = useContext(StockContext);\n\n  const [cards, setCards] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [stock, setStock] = useState({ ...stockDefaultValue });\n\n  useEffect(() => {\n    (async function searchStockList() {\n      const _cards = await getCardsOnBoard(TRELLO_BOARD_STUDY_ID);\n      setCards(_cards);\n      const _labels = await getLabelsOnBoard(TRELLO_BOARD_STUDY_ID);\n      setLabels(_labels);\n    })();\n  }, []);\n\n  const addCardToTrello = () => {\n    const { code, name, nation, userId, createdAt, tags, basePrice } = stock;\n    const _stock = [code, name, nation, userId, createdAt, '', tags, basePrice];\n    createCard(_stock, TRELLO_LIST_ID, labels).then((res) => {\n      if (res) setStock({ ...stockDefaultValue });\n    });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setStock((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const { name, code, nation, createdAt, basePrice } = stock;\n\n  return (\n    <Container>\n      <AddButton onClick={addCardToTrello} disabled={!name || !code}>\n        AddCARD\n      </AddButton>\n      <Input>\n        <StockInput\n          type=\"text\"\n          name=\"code\"\n          placeholder=\"종목코드\"\n          maxLength={20}\n          value={code}\n          onChange={handleChange}\n        />\n        <StockInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"종목이름\"\n          maxLength={20}\n          value={name}\n          onChange={handleChange}\n        />\n        <Dropdown\n          size=\"medium\"\n          placement=\"bottom-start\"\n          content={\n            <div>\n              {Object.keys(LOCALE).map((_nation) => (\n                <DropdownList\n                  key={_nation}\n                  onClick={() => {\n                    setStock((prevState) => ({\n                      ...prevState,\n                      nation: LOCALE[_nation],\n                    }));\n                  }}\n                >\n                  {LOCALE[_nation]}\n                </DropdownList>\n              ))}\n            </div>\n          }\n        >\n          <DropdownText> {nation || LOCALE.KO}</DropdownText>\n        </Dropdown>\n\n        <StockInput\n          type=\"text\"\n          name=\"createdAt\"\n          placeholder=\"추가날짜\"\n          maxLength={20}\n          value={createdAt}\n          onChange={handleChange}\n          readOnly\n        />\n        <StockInput\n          type=\"text\"\n          name=\"basePrice\"\n          placeholder=\"basePrice\"\n          maxLength={20}\n          value={basePrice}\n          onChange={handleChange}\n        />\n        <Dropdown\n          size=\"medium\"\n          placement=\"bottom-start\"\n          content={\n            <div>\n              {tagList.map((tag) => (\n                <DropdownList\n                  key={tag}\n                  onClick={() => {\n                    setStock((prevState) => ({\n                      ...prevState,\n                      tags: prevState.tags\n                        ? `${prevState.tags}/${tag}`\n                        : `${tag}`,\n                    }));\n                  }}\n                >\n                  {tag}\n                </DropdownList>\n              ))}\n            </div>\n          }\n        >\n          <DropdownText>태그 추가</DropdownText>\n        </Dropdown>\n        {stock.tags &&\n          stock.tags\n            .split('/')\n            .map((tag) => <StockText key={tag}>{tag}</StockText>)}\n      </Input>\n      <List>\n        {cards?.map((card) => (\n          <StockItem key={card.id}>\n            {Object.keys(JSON.parse(card.desc)).map((key) => {\n              return (\n                <StockInput\n                  key={key}\n                  type=\"text\"\n                  name={key}\n                  placeholder={key}\n                  maxLength={20}\n                  value={JSON.parse(card.desc)[key]}\n                  onChange={handleChange}\n                  disabled\n                />\n              );\n            })}\n            {card.labels.map((label) => (\n              <StockText key={label.id}>{label.name}</StockText>\n            ))}\n          </StockItem>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default StockList;\n","import styled from 'styled-components';\nimport { flexColumnCenterX } from 'remember-ui';\n\nexport const Container = styled.div`\n  ${flexColumnCenterX}\n  padding:20px;\n`;\n","import React, { useEffect, useState, useContext } from 'react';\n\nimport { chartOption } from 'constants/chart';\nimport { LOCALE } from 'constants/locale';\nimport StockChart from 'components/StockChart/StockChart';\nimport StockCalendar from 'components/StockCalendar/StockCalendar';\nimport { getTodayDate } from 'utils/day';\nimport { getCurrency, getIndexOfDayBetween } from 'utils/chart';\nimport { StockContext } from 'context/StockContext';\n\nimport { Container } from './Dashboard.styles';\n\nconst Dashboard = () => {\n  const {\n    state: { stockList },\n    actions: { getStockData },\n  } = useContext(StockContext);\n\n  const [isLoaded, setLoaded] = useState(false);\n  const [option, setOption] = useState({\n    ...chartOption,\n  });\n  const [optionHigh, setOptionHigh] = useState({\n    ...chartOption,\n  });\n  const [optionExtraHigh, setOptionExtraHigh] = useState({\n    ...chartOption,\n  });\n  const [optionLow, setOptionLow] = useState({\n    ...chartOption,\n  });\n  const [optionUs, setOptionUs] = useState({\n    ...chartOption,\n  });\n  const [startDate, setStartDate] = useState('2020-01-02');\n  const [endDate, setEndDate] = useState(getTodayDate());\n\n  useEffect(() => {\n    const stockData = { ...chartOption };\n    const stockDataHigh = { ...chartOption };\n    const stockDataExtraHigh = { ...chartOption };\n    const stockDataLow = { ...chartOption };\n    const stockDataUs = { ...chartOption };\n    const fetchAllData = [];\n\n    stockList\n      .map((el) => el[0])\n      .forEach(async (number) => {\n        fetchAllData.push(getStockData(number));\n      });\n\n    Promise.all(fetchAllData).then((data) => {\n      data.forEach((stockAll, index) => {\n        const currentStock = stockList[index];\n        const currency = (currentStock && currentStock[2]) || LOCALE.KO;\n        const { startDateIndex, endDateIndex } = getIndexOfDayBetween(\n          stockAll,\n          startDate,\n          endDate\n        );\n\n        const stock = stockAll.slice(startDateIndex, endDateIndex + 1);\n\n        const priceList = stock\n          .slice(1)\n          .map((el) => {\n            if (el[4] !== '0') return parseInt(el[4], 10);\n            return null;\n          })\n          .filter((el) => el);\n\n        const mean = (Math.min(...priceList) + Math.max(...priceList)) / 2;\n        const ref =\n          // eslint-disable-next-line no-nested-ternary\n          currency === LOCALE.US\n            ? stockDataUs\n            : // eslint-disable-next-line no-nested-ternary\n            mean > 400000\n            ? stockDataExtraHigh\n            : // eslint-disable-next-line no-nested-ternary\n            mean > 200000\n            ? stockDataHigh\n            : mean < 50000\n            ? stockDataLow\n            : stockData;\n\n        ref.xAxis = {\n          ...ref.xAxis,\n          data: stock.map((el) => el[0]),\n        };\n\n        ref.yAxis = {\n          ...ref.yAxis,\n          axisLabel: {\n            formatter: `{value} ${getCurrency(currentStock)}`,\n          },\n        };\n\n        ref.series = [\n          ...ref.series,\n          {\n            data: stock.map((el) => {\n              if (el[4] !== '0') {\n                if (currentStock && currentStock[2] === LOCALE.KO) {\n                  return parseInt(el[4], 10);\n                }\n                if (currentStock && currentStock[2] === LOCALE.US) {\n                  return parseFloat(el[4]);\n                }\n                return parseInt(el[4], 10);\n              }\n              return null;\n            }),\n            type: 'line',\n            connectNulls: true,\n            name: `${currentStock[1]}/${currentStock[0]}`,\n          },\n        ];\n      });\n      setOption(stockData);\n      setOptionHigh(stockDataHigh);\n      setOptionExtraHigh(stockDataExtraHigh);\n      setOptionLow(stockDataLow);\n      setOptionUs(stockDataUs);\n      setLoaded(true);\n    });\n  }, [startDate, endDate, stockList, getStockData]);\n\n  return (\n    <Container>\n      <StockCalendar\n        startDate={startDate}\n        setStartDate={setStartDate}\n        endDate={endDate}\n        setEndDate={setEndDate}\n      />\n      {isLoaded && (\n        <StockChart stockList={stockList} chartData={optionExtraHigh} />\n      )}\n      {isLoaded && <StockChart stockList={stockList} chartData={optionHigh} />}\n      {isLoaded && <StockChart stockList={stockList} chartData={option} />}\n      {isLoaded && <StockChart stockList={stockList} chartData={optionLow} />}\n      {isLoaded && <StockChart stockList={stockList} chartData={optionUs} />}\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { flexColumnCenterX } from 'remember-ui';\n\nexport const Container = styled.div`\n  ${flexColumnCenterX}\n  padding:20px;\n`;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport Routes from 'routers/routes';\nimport { chartOption } from 'constants/chart';\nimport { LOCALE } from 'constants/locale';\nimport StockChart from 'components/StockChart/StockChart';\nimport StockCalendar from 'components/StockCalendar/StockCalendar';\nimport { getTodayDate } from 'utils/day';\nimport {\n  getCurrency,\n  getPercent,\n  getIndexOfDayBetween,\n  getTargetDateValue,\n} from 'utils/chart';\nimport { getStockListByTag } from 'utils/tag';\nimport { StockContext } from 'context/StockContext';\n\nimport { Container } from './Tag.styles';\n\nconst Tag = () => {\n  const {\n    params: { tag: tagName },\n  } = useRouteMatch();\n  const {\n    state: { stockList },\n    actions: { getStockData },\n  } = useContext(StockContext);\n\n  const history = useHistory();\n  const { stockListPage } = Routes;\n\n  const [tagStockList, setTagStockList] = useState([]);\n  const [isLoaded, setLoaded] = useState(false);\n  const [option, setOption] = useState({\n    ...chartOption,\n  });\n  const [optionUs, setOptionUs] = useState({\n    ...chartOption,\n  });\n  const [optionPercent, setOptionPercent] = useState({\n    ...chartOption,\n  });\n\n  const [startDate, setStartDate] = useState('2020-01-02');\n  const [endDate, setEndDate] = useState(getTodayDate());\n  const [percentTargetDate, setPercentTargetDate] = useState(startDate);\n\n  useEffect(() => {\n    const _tagStockList = getStockListByTag(stockList, tagName);\n    if (stockList.length > 0 && _tagStockList.length === 0)\n      history.replace(stockListPage.path);\n\n    setTagStockList(_tagStockList);\n    const stockData = { ...chartOption };\n    const stockDataUs = { ...chartOption };\n    const stockDataPercent = { ...chartOption };\n    const fetchAllData = [];\n\n    _tagStockList\n      .map((el) => el[0])\n      .forEach(async (number) => {\n        fetchAllData.push(getStockData(number));\n      });\n\n    Promise.all(fetchAllData).then((data) => {\n      data.forEach((stockAll, index) => {\n        const currentStock = _tagStockList[index];\n\n        const currency = (currentStock && currentStock[2]) || LOCALE.KO;\n\n        const { startDateIndex, endDateIndex } = getIndexOfDayBetween(\n          stockAll,\n          startDate,\n          endDate\n        );\n\n        const stock = stockAll.slice(startDateIndex, endDateIndex + 1);\n\n        const targetDateValue = getTargetDateValue(stock, percentTargetDate);\n\n        const ref = currency === LOCALE.US ? stockDataUs : stockData;\n\n        ref.xAxis = {\n          ...ref.xAxis,\n          data: stock.map((el) => el[0]),\n        };\n        stockDataPercent.xAxis = {\n          ...ref.xAxis,\n        };\n\n        ref.yAxis = {\n          ...ref.yAxis,\n          axisLabel: {\n            formatter: `{value} ${getCurrency(currentStock)}`,\n          },\n        };\n        stockDataPercent.yAxis = {\n          ...stockDataPercent.yAxis,\n          axisLabel: {\n            formatter: '{value} %',\n          },\n        };\n\n        ref.series = [\n          ...ref.series,\n          {\n            data: stock.map((el) => {\n              if (el[4] !== '0') {\n                if (currentStock && currentStock[2] === LOCALE.KO) {\n                  return parseInt(el[4], 10);\n                }\n                if (currentStock && currentStock[2] === LOCALE.US) {\n                  return parseFloat(el[4]);\n                }\n                return parseInt(el[4], 10);\n              }\n              return null;\n            }),\n            type: 'line',\n            connectNulls: true,\n            name: `${currentStock[1]}/${currentStock[0]}`,\n          },\n        ];\n\n        stockDataPercent.series = [\n          ...stockDataPercent.series,\n          {\n            data: stock.map((el) => {\n              if (el[4] !== '0')\n                return getPercent(targetDateValue, parseInt(el[4], 10));\n              return null;\n            }),\n            type: 'line',\n            connectNulls: true,\n            name: `${currentStock[1]}/${currentStock[0]}`,\n          },\n        ];\n      });\n      setOption(stockData);\n      setOptionUs(stockDataUs);\n      setOptionPercent(stockDataPercent);\n      setLoaded(true);\n    });\n  }, [\n    startDate,\n    endDate,\n    stockList,\n    tagName,\n    history,\n    stockListPage.path,\n    percentTargetDate,\n    getStockData,\n  ]);\n\n  const onChartClick = (params) => {\n    const { name } = params;\n    setPercentTargetDate(name);\n  };\n\n  return (\n    <Container>\n      <StockCalendar\n        startDate={startDate}\n        setStartDate={setStartDate}\n        endDate={endDate}\n        setEndDate={setEndDate}\n      />\n      {isLoaded && tagStockList.find((el) => el[2] === LOCALE.KO) && (\n        <StockChart stockList={tagStockList} chartData={option} />\n      )}\n\n      {isLoaded && tagStockList.find((el) => el[2] === LOCALE.US) && (\n        <StockChart stockList={tagStockList} chartData={optionUs} />\n      )}\n      {isLoaded && (\n        <>\n          {percentTargetDate}일( 기준일 = 0% ) 대비 상승/하락 률 ( 그래프 클릭\n          날짜 변경 )\n          <StockChart\n            stockList={tagStockList}\n            chartData={optionPercent}\n            onEvents={{\n              click: onChartClick,\n            }}\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Tag;\n","export const getStockListByTag = (stockList, tag) => {\n  return stockList.filter((el) => el[6] && el[6].includes(tag));\n};\n","import styled from 'styled-components';\n\nexport const AppBody = styled.div`\n  height: 100%;\n`;\n","import React from 'react';\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom';\nimport { GlobalTheme } from 'remember-ui';\n\nimport { StockProvider } from 'context/StockContext';\nimport Routes from 'routers/routes';\nimport CommonRoute from 'routers/CommonRoute';\nimport NavBar from 'components/NavBar/NavBar';\nimport Stock from 'pages/Stock/Stock';\nimport StockList from 'pages/StockList/StockList';\nimport Dashboard from 'pages/Dashboard/Dashboard';\nimport Tag from 'pages/Tag/Tag';\n\nimport { AppBody } from './App.styles';\n\nfunction App() {\n  const { root, stock, stockListPage, tag } = Routes;\n\n  // eslint-disable-next-line no-console\n  console.log(process.env);\n  return (\n    <StockProvider>\n      <BrowserRouter>\n        <AppBody>\n          <GlobalTheme />\n          <NavBar />\n          <Switch>\n            <CommonRoute path={stock.path}>\n              <Stock />\n            </CommonRoute>\n            <CommonRoute path={tag.path}>\n              <Tag />\n            </CommonRoute>\n            <CommonRoute path={stockListPage.path}>\n              <StockList />\n            </CommonRoute>\n            <CommonRoute path={root.path}>\n              <Dashboard />\n            </CommonRoute>\n            <Redirect to={stockListPage.path} />\n          </Switch>\n        </AppBody>\n      </BrowserRouter>\n    </StockProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // console.log(\n              //   'New content is available and will be used when all ' +\n              //     'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              // );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // console.log('Content is cached for offline use.');\n\n              // Execute callback\n              // eslint-disable-next-line no-lonely-if\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}